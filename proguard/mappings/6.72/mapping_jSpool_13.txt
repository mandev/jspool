com.AdLitteram.jSpool.Actions.About -> H:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.CopyChannel -> ao:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.DestroyChannel -> P:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.DisableChannel -> aK:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.EnableChannel -> S:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.LowerChannel -> i:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.ModifyChannel -> C:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.NewChannel -> aH:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.Preferences -> aa:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.Quit -> am:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.ResetLogArea -> F:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.StartAllChannels -> h:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.StartChannel -> n:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.StopAllChannels -> y:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.StopChannel -> ae:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Actions.UpperChannel -> ax:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Channel -> com.AdLitteram.jSpool.k:
    java.lang.Class[] sourceHandlers -> a
    java.lang.Class[] targetHandlers -> b
    java.util.logging.Logger logger -> a
    com.AdLitteram.jSpool.Gui.MainFrame frame -> a
    java.lang.Thread clockThread -> a
    java.util.HashMap properties -> a
    int status -> a
    java.util.regex.Pattern regexp -> a
    com.AdLitteram.jSpool.Sources.AbstractSource[] srcHandlers -> a
    com.AdLitteram.jSpool.Targets.AbstractTarget[] trgHandlers -> a
    int progressVal -> b
    java.lang.String uploadFilename -> a
    java.lang.String downloadFilename -> b
    java.util.logging.Logger getLogger() -> a
    void logInfo(java.lang.String) -> a
    void logWarning(java.lang.String,java.lang.Throwable) -> a
    java.lang.String toString() -> toString
    java.lang.String getID() -> a
    int getStability() -> a
    boolean listSubDir() -> a
    boolean zeroLength() -> b
    boolean autoStart() -> c
    boolean setRegexp() -> d
    java.util.regex.Pattern getRegexp() -> a
    void setStatus(int) -> a
    int getStatus() -> b
    java.util.HashMap getProperties() -> a
    void setProperty(java.lang.Object,java.lang.Object) -> a
    java.lang.String getStringProp(java.lang.Object) -> a
    java.lang.String getStringProp(java.lang.Object,java.lang.String) -> a
    boolean getBooleanProp(java.lang.Object,boolean) -> a
    int getIntProp(java.lang.Object,int) -> a
    long getLongProp(java.lang.Object,long) -> a
    java.lang.String getSrcHandlerName(int) -> a
    java.lang.String getTrgHandlerName(int) -> b
    void updateHandlers() -> e
    com.AdLitteram.jSpool.Sources.AbstractSource getSrcHandler() -> a
    com.AdLitteram.jSpool.Targets.AbstractTarget getTrgHandler() -> a
    java.lang.String getSourceName() -> b
    java.lang.String getTargetName() -> c
    void start() -> a
    void run() -> run
    void stop() -> b
    void disable() -> c
    void enable() -> d
    boolean isStopped() -> e
    void update(int) -> b
    int getProgress() -> c
    java.lang.String getDownloadFilename() -> d
    java.lang.String getUploadFilename() -> e
    void setDownloadFilename(java.lang.String) -> b
    void setUploadFilename(java.lang.String) -> c
com.AdLitteram.jSpool.FilenameCleaner -> com.AdLitteram.jSpool.c:
    java.lang.String[] CHAR_MAP -> a
    java.lang.String clean(java.lang.String) -> a
com.AdLitteram.jSpool.Files.FtpSourceFile -> z:
    com.AdLitteram.jSpool.FtpConnexion ftpConnex -> a
    com.enterprisedt.net.ftp.FTPFile ftpFile -> a
    java.lang.String dir -> a
    long length -> a
    java.io.File tmpFile -> a
    java.lang.String getPath() -> a
    long getLength() -> a
    java.lang.String getName() -> b
    boolean exists() -> a
    boolean canRead() -> b
    boolean isDirectory() -> e
    long lastModified() -> b
    boolean delete() -> c
    boolean close() -> d
    java.io.File getFile() -> a
    void init(long) -> a
    void process(long) -> b
    com.AdLitteram.jSpool.Files.SourceFile[] listFiles(java.util.regex.Pattern) -> a
com.AdLitteram.jSpool.Files.LocalFile -> m:
    java.io.File file -> a
    long checksum -> a
    long length -> b
    java.util.regex.Pattern regexp -> a
    boolean useChecksum -> a
    int sortOrder -> c
    java.util.Comparator alphaSort -> a
    java.util.Comparator alphaInvSort -> b
    java.util.Comparator dateSort -> c
    java.util.Comparator dateInvSort -> d
    java.lang.String getPath() -> a
    java.io.File getFile() -> a
    long getLength() -> a
    long lastModified() -> b
    boolean exists() -> a
    boolean canRead() -> b
    java.lang.String getName() -> b
    boolean delete() -> c
    boolean close() -> d
    void init(long) -> a
    void process(long) -> b
    long computeChecksum() -> c
    boolean isDirectory() -> e
    com.AdLitteram.jSpool.Files.SourceFile[] listFiles(java.util.regex.Pattern) -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.AdLitteram.jSpool.Files.LocalFile$1 -> c:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.AdLitteram.jSpool.Files.LocalFile$2 -> e:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.AdLitteram.jSpool.Files.LocalFile$3 -> a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.AdLitteram.jSpool.Files.LocalFile$4 -> b:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.AdLitteram.jSpool.Files.SourceFile -> ap:
    int maxStability -> a
    int stability -> b
    boolean isStabilized() -> f
    void init(long) -> a
    void process(long) -> b
    java.io.File getFile() -> a
    java.lang.String getPath() -> a
    java.lang.String getName() -> b
    long getLength() -> a
    boolean exists() -> a
    boolean canRead() -> b
    boolean delete() -> c
    boolean close() -> d
    boolean isDirectory() -> e
    long lastModified() -> b
    com.AdLitteram.jSpool.Files.SourceFile[] listFiles(java.util.regex.Pattern) -> a
    void copyTo(java.io.File) -> a
com.AdLitteram.jSpool.FtpConnexion -> com.AdLitteram.jSpool.g:
    java.io.PrintWriter logWriter -> a
    com.enterprisedt.net.ftp.FTPClient client -> a
    com.AdLitteram.jSpool.Channel channel -> a
    java.lang.String server -> a
    java.lang.String user -> b
    java.lang.String passwd -> c
    java.lang.String dir -> d
    com.enterprisedt.net.ftp.FTPConnectMode mode -> a
    long fileSize -> a
    com.enterprisedt.net.ftp.FTPClient getClient() -> a
    com.AdLitteram.jSpool.Channel getChannel() -> a
    java.lang.String getDir() -> a
    boolean isConnected() -> a
    void connect() -> a
    void chhomedir() -> b
    void close() -> c
    void createDir(java.lang.String) -> a
    void uploadFile(java.lang.String,java.lang.String) -> a
    void bytesTransferred(long) -> bytesTransferred
    void setFileSize(long) -> a
    com.AdLitteram.jSpool.Channel access$000(com.AdLitteram.jSpool.FtpConnexion) -> a
    com.enterprisedt.net.ftp.FTPClient access$100(com.AdLitteram.jSpool.FtpConnexion) -> a
com.AdLitteram.jSpool.FtpConnexion$1 -> com.AdLitteram.jSpool.n:
    int val$progress -> a
    com.AdLitteram.jSpool.FtpConnexion this$0 -> a
    void run() -> run
com.AdLitteram.jSpool.Gui.AboutDialog -> ar:
    java.awt.Image img -> a
com.AdLitteram.jSpool.Gui.AboutDialog$1 -> x:
    com.AdLitteram.jSpool.Gui.AboutDialog this$0 -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
com.AdLitteram.jSpool.Gui.ChannelDialog -> ah:
    int OK -> a
    int CANCEL -> b
    com.AdLitteram.jSpool.Channel channel -> a
    int exit -> c
    javax.swing.JTextField identField -> a
    javax.swing.JTextField tempoField -> b
    javax.swing.JTextField stabiField -> c
    javax.swing.JTextField filterField -> d
    javax.swing.JTextField maxField -> e
    javax.swing.JCheckBox recCheck -> a
    javax.swing.JCheckBox zeroCheck -> b
    javax.swing.JCheckBox autostartCheck -> c
    javax.swing.JPanel srcPanel -> a
    javax.swing.JPanel modePanel -> b
    javax.swing.JComboBox modeCombo -> a
    javax.swing.JComboBox srcCombo -> b
    int showDialog() -> a
    javax.swing.JPanel buildSrcPanel() -> a
    javax.swing.JPanel buildModePanel() -> b
    void OKPressed() -> a
    void cancelPressed() -> b
    javax.swing.JPanel access$000(com.AdLitteram.jSpool.Gui.ChannelDialog) -> a
    javax.swing.JComboBox access$100(com.AdLitteram.jSpool.Gui.ChannelDialog) -> a
    javax.swing.JPanel access$200(com.AdLitteram.jSpool.Gui.ChannelDialog) -> b
    javax.swing.JComboBox access$300(com.AdLitteram.jSpool.Gui.ChannelDialog) -> b
com.AdLitteram.jSpool.Gui.ChannelDialog$1 -> aj:
    com.AdLitteram.jSpool.Gui.ChannelDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Gui.ChannelDialog$2 -> ai:
    com.AdLitteram.jSpool.Gui.ChannelDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Gui.ChannelDialog$3 -> al:
    com.AdLitteram.jSpool.Gui.ChannelDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Gui.ChannelDialog$4 -> ak:
    com.AdLitteram.jSpool.Gui.ChannelDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Gui.ChannelModel -> v:
    java.lang.String[] names -> a
    com.AdLitteram.jSpool.Gui.MainFrame frame -> a
    void updateChannel(com.AdLitteram.jSpool.Channel) -> a
    void updateDownBar(com.AdLitteram.jSpool.Channel) -> b
    void updateUpBar(com.AdLitteram.jSpool.Channel) -> c
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    java.lang.Object getValueAt(int,int) -> getValueAt
    java.lang.String getColumnName(int) -> getColumnName
    java.lang.Class getColumnClass(int) -> getColumnClass
    boolean isCellEditable(int,int) -> isCellEditable
    void setValueAt(java.lang.Object,int,int) -> setValueAt
com.AdLitteram.jSpool.Gui.DirChooser -> B:
    boolean isNative -> a
    java.awt.FileDialog awtChooser -> a
    com.AdLitteram.jSpool.Gui.DirectoryDialog swingChooser -> a
    java.io.File selectedDir -> a
    int showDialog() -> a
    java.io.File getSelectedDirectory() -> a
com.AdLitteram.jSpool.Gui.DirectoryChooser -> ag:
    javax.swing.filechooser.FileSystemView fsv -> a
    java.io.File getSelectedDirectory() -> a
    void addActionListener(java.awt.event.ActionListener) -> a
    void valueChanged(javax.swing.event.TreeSelectionEvent) -> valueChanged
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    javax.swing.tree.TreePath mkPath(java.io.File) -> a
    javax.swing.filechooser.FileSystemView access$000() -> a
com.AdLitteram.jSpool.Gui.DirectoryChooser$DirNode -> Y:
    java.io.File getDir() -> a
    int getChildCount() -> getChildCount
    java.util.Enumeration children() -> children
    boolean isLeaf() -> isLeaf
    void populateChildren() -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.AdLitteram.jSpool.Gui.DirectoryDialog -> u:
    int status -> a
    java.lang.String dirname -> a
    com.AdLitteram.jSpool.Gui.DirectoryChooser dc -> a
    javax.swing.JButton okButton -> a
    java.awt.event.ActionListener approveListener -> a
    int showDialog() -> a
    java.io.File getSelectedDirectory() -> a
    com.AdLitteram.jSpool.Gui.DirectoryChooser access$000(com.AdLitteram.jSpool.Gui.DirectoryDialog) -> a
    int access$102(com.AdLitteram.jSpool.Gui.DirectoryDialog,int) -> a
    javax.swing.JButton access$200(com.AdLitteram.jSpool.Gui.DirectoryDialog) -> a
com.AdLitteram.jSpool.Gui.DirectoryDialog$1 -> az:
    com.AdLitteram.jSpool.Gui.DirectoryDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Gui.DirectoryDialog$2 -> ay:
    com.AdLitteram.jSpool.Gui.DirectoryDialog this$0 -> a
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.AdLitteram.jSpool.Gui.DirectoryDialog$3 -> aA:
    com.AdLitteram.jSpool.Gui.DirectoryDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Gui.DownloadBar -> aE:
    void setSelectedBlack() -> a
    java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
com.AdLitteram.jSpool.Gui.FileChooser -> K:
    boolean isNative -> a
    java.awt.FileDialog awtChooser -> a
    javax.swing.JFileChooser swingChooser -> a
    java.awt.Component parent -> a
    int mode -> a
    java.io.File selectedFile -> a
    int showAwtDialog(int) -> a
    int showSwingDialog(int,java.lang.String) -> a
    int showOpenDialog(java.lang.String) -> a
    int showSaveDialog(java.lang.String) -> b
    java.io.File getSelectedFile() -> a
    void setFile(java.lang.String) -> a
    void addFileFilter(javax.swing.filechooser.FileFilter) -> a
    int access$000(com.AdLitteram.jSpool.Gui.FileChooser) -> a
    javax.swing.JFileChooser access$100(com.AdLitteram.jSpool.Gui.FileChooser) -> a
com.AdLitteram.jSpool.Gui.FileChooser$1 -> av:
    com.AdLitteram.jSpool.Gui.FileChooser this$0 -> a
    void approveSelection() -> approveSelection
com.AdLitteram.jSpool.Gui.FileChooser$2 -> aw:
    javax.swing.filechooser.FileFilter val$ff -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.AdLitteram.jSpool.Gui.LogArea -> V:
    int maxLogSize -> a
    void write(java.util.logging.LogRecord) -> a
    int access$000(com.AdLitteram.jSpool.Gui.LogArea) -> a
com.AdLitteram.jSpool.Gui.LogArea$1 -> D:
    java.util.logging.LogRecord val$record -> a
    com.AdLitteram.jSpool.Gui.LogArea this$0 -> a
    void run() -> run
com.AdLitteram.jSpool.Gui.LogArea$LogDocument -> Q:
    com.AdLitteram.jSpool.Gui.LogArea this$0 -> a
    void insertString(int,java.lang.String,javax.swing.text.AttributeSet) -> insertString
com.AdLitteram.jSpool.Gui.MainFrame -> an:
    java.lang.String[] statusArray -> a
    com.AdLitteram.jSpool.Gui.MainFrame thisFrame -> a
    java.util.ArrayList channelList -> a
    javax.swing.JTabbedPane logPane -> a
    com.AdLitteram.jSpool.Gui.LogArea allLogArea -> a
    javax.swing.JTable tableView -> a
    com.AdLitteram.jSpool.Gui.ChannelModel channelModel -> a
    int lastSelectedRow -> a
    void resetLogArea() -> a
    void addLogArea(com.AdLitteram.jSpool.Channel) -> a
    void setLogTitle(com.AdLitteram.jSpool.Channel) -> b
    void removeLogArea(com.AdLitteram.jSpool.Channel) -> c
    java.util.ArrayList getChannels() -> a
    java.lang.String getLookAndFeel() -> a
    void setLookAndFeel(java.lang.String) -> a
    void saveConfig() -> b
    java.util.ArrayList access$000(com.AdLitteram.jSpool.Gui.MainFrame) -> a
    com.AdLitteram.jSpool.Gui.MainFrame access$100(com.AdLitteram.jSpool.Gui.MainFrame) -> a
com.AdLitteram.jSpool.Gui.MainFrame$1 -> M:
    com.AdLitteram.jSpool.Gui.MainFrame this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
com.AdLitteram.jSpool.Gui.MainFrame$2 -> N:
    com.AdLitteram.jSpool.Gui.MainFrame this$0 -> a
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
com.AdLitteram.jSpool.Gui.PrefDialog -> aD:
    com.AdLitteram.jSpool.Gui.MainFrame parent -> a
    javax.swing.JRadioButton metalButton -> a
    javax.swing.JRadioButton windowsButton -> b
    javax.swing.JRadioButton motifButton -> c
    javax.swing.JRadioButton enButton -> d
    javax.swing.JRadioButton frButton -> e
    javax.swing.JCheckBox useJDBCLogCheck -> a
    javax.swing.JTextField driverField -> a
    javax.swing.JTextField urlField -> b
    javax.swing.JTextField userField -> c
    javax.swing.JPasswordField passwordField -> a
    javax.swing.JRadioButton access$000(com.AdLitteram.jSpool.Gui.PrefDialog) -> a
    javax.swing.JRadioButton access$100(com.AdLitteram.jSpool.Gui.PrefDialog) -> b
    com.AdLitteram.jSpool.Gui.MainFrame access$200(com.AdLitteram.jSpool.Gui.PrefDialog) -> a
    javax.swing.JRadioButton access$300(com.AdLitteram.jSpool.Gui.PrefDialog) -> c
    javax.swing.JCheckBox access$400(com.AdLitteram.jSpool.Gui.PrefDialog) -> a
    javax.swing.JTextField access$500(com.AdLitteram.jSpool.Gui.PrefDialog) -> a
    javax.swing.JTextField access$600(com.AdLitteram.jSpool.Gui.PrefDialog) -> b
    javax.swing.JTextField access$700(com.AdLitteram.jSpool.Gui.PrefDialog) -> c
    javax.swing.JPasswordField access$800(com.AdLitteram.jSpool.Gui.PrefDialog) -> a
com.AdLitteram.jSpool.Gui.PrefDialog$1 -> t:
    com.AdLitteram.jSpool.Gui.PrefDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Gui.PrefDialog$2 -> s:
    com.AdLitteram.jSpool.Gui.PrefDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Gui.UploadBar -> aB:
    void setSelectedBlack() -> a
    java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
com.AdLitteram.jSpool.JDBCLogHandler -> com.AdLitteram.jSpool.l:
    java.sql.Connection connection -> a
    java.sql.PreparedStatement prepInsert -> a
    boolean isConnected() -> a
    java.lang.String truncate(java.lang.String,int) -> a
    void publish(java.util.logging.LogRecord) -> publish
    void close() -> close
    void flush() -> flush
com.AdLitteram.jSpool.Listeners.AbstractDisposer -> X:
    java.awt.Window parent -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.AdLitteram.jSpool.Main -> com.AdLitteram.jSpool.Main:
    java.lang.String HOME_DIR -> a
    java.lang.String PROG_DIR -> e
    java.lang.String CONF_DIR -> f
    java.lang.String LANG_DIR -> b
    java.lang.String USER_CONF_DIR -> c
    java.lang.String USER_PROP_FILE -> d
    com.AdLitteram.jSpool.Gui.MainFrame frame -> a
    javax.swing.InputMap inputMap -> a
    javax.swing.ActionMap actionMap -> a
    void addAction(javax.swing.Action) -> a
    javax.swing.Action getAction(java.lang.String) -> a
    com.AdLitteram.jSpool.Gui.MainFrame getFrame() -> a
    void quit() -> a
    void main(java.lang.String[]) -> main
com.AdLitteram.jSpool.Pdf.Counter -> O:
    java.lang.String HOME_DIR -> a
    java.lang.String PROG_DIR -> b
    java.lang.String USER_DIR1 -> c
    java.lang.String USER_DIR2 -> d
    java.lang.String USER_FILE1 -> e
    java.lang.String USER_FILE2 -> f
    int number -> a
    int next() -> a
    void load(java.lang.String) -> a
    void save(java.lang.String) -> b
com.AdLitteram.jSpool.Pdf.PdfBuilder -> k:
    int[] alignArray -> a
    com.AdLitteram.jSpool.Channel channel -> a
    java.io.File inputFile -> a
    java.io.File outputFile -> b
    java.io.File cnfDir -> c
    java.io.File errorDir -> d
    com.drew.metadata.Directory iptcDirectory -> a
    java.util.Properties properties -> a
    java.util.zip.ZipFile zfile -> a
    java.util.ArrayList imageList -> a
    java.util.ArrayList textList -> b
    int quantity -> a
    java.lang.String reference -> a
    java.lang.String source -> b
    java.lang.String category -> c
    java.lang.String address -> d
    java.lang.String note -> e
    java.lang.String odate -> f
    java.lang.String order -> g
    com.lowagie.text.pdf.PdfReader bgReader -> a
    com.lowagie.text.pdf.PdfStamper bgStamper -> a
    com.lowagie.text.pdf.PdfReader covReader -> b
    com.lowagie.text.pdf.PdfReader horReader -> c
    com.lowagie.text.pdf.PdfReader verReader -> d
    boolean build(java.lang.String,java.lang.String,java.lang.String) -> a
    int getOffset(java.lang.String) -> a
    void readZipFile() -> a
    void addText(com.lowagie.text.pdf.PdfContentByte,java.lang.String) -> a
    void extractText() -> b
    java.io.File getTempJpegFile(int) -> a
    java.lang.String rename(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String replaceText(java.lang.String) -> a
com.AdLitteram.jSpool.Pdf.PdfDecryptor -> j:
    byte[] ownerPassword -> a
    byte[] ownerPassword2 -> b
    boolean decrypt(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean setInfoMap(java.lang.String,java.lang.String,java.lang.String) -> b
    boolean recrypt(java.lang.String,java.lang.String,java.lang.String) -> c
com.AdLitteram.jSpool.Pdf.PdfMerger -> aI:
    int[] alignArray -> a
    java.lang.String outname -> a
    org.w3c.dom.Document document -> a
    javax.xml.xpath.XPath xpath -> a
    com.lowagie.text.pdf.PdfReader bgReader -> a
    com.lowagie.text.pdf.PdfStamper stamper -> a
    int merge(java.lang.String,java.lang.String,java.lang.String) -> a
    void init(java.util.HashMap) -> a
    java.lang.String getXPathValue(java.util.HashMap) -> a
    void setText(java.util.HashMap) -> b
    java.lang.String processText(java.lang.String,java.lang.String) -> a
    void setImage(java.util.HashMap) -> c
    void setPdf(java.util.HashMap) -> d
com.AdLitteram.jSpool.Pdf.PdfTransformer -> aG:
    com.AdLitteram.jSpool.Channel channel -> a
    com.lowagie.text.pdf.PdfReader reader -> a
    java.util.HashMap infoMap -> a
    java.util.Properties properties -> a
    java.io.File outputDir -> a
    java.io.File inputFile -> b
    java.lang.String outputName -> a
    java.lang.String barCodText -> b
    double price -> a
    double totalPrice -> b
    double extraPrice -> c
    double extraTotalPrice -> d
    double redPrice -> e
    double redTotalPrice -> f
    double redExtraPrice -> g
    double redExtraTotalPrice -> h
    boolean isCoveredExtracted -> a
    int page -> a
    boolean transform(java.lang.String,java.lang.String,java.lang.String) -> a
    void saveTxtDescription() -> a
    void addHeaders(com.lowagie.text.Document) -> a
    void extractPages(boolean,double,double,double) -> a
    void addIndexPage(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,double,double,double) -> a
    void addTrailerPage(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,double,double,double) -> b
    void centerTemplate(com.lowagie.text.pdf.PdfTemplate,com.lowagie.text.pdf.PdfImportedPage,java.awt.geom.AffineTransform) -> a
    void showLogo(com.lowagie.text.pdf.PdfTemplate,java.lang.String,double,double,double) -> a
    void showBarcode(com.lowagie.text.pdf.PdfTemplate,double,double,double) -> a
    void showTextIndex(com.lowagie.text.pdf.PdfTemplate) -> a
    java.lang.String getPdfMetaData(java.lang.String) -> a
    java.lang.String getBarCodeText() -> a
    java.lang.String rename(java.lang.String,java.lang.String,java.lang.String) -> a
com.AdLitteram.jSpool.Pdf.PdfUtils -> I:
    void decrypt(java.io.File,java.io.File,byte[]) -> a
com.AdLitteram.jSpool.Pdf.Unzipper -> aJ:
    boolean unzip(java.lang.String,java.lang.String,java.lang.String) -> a
    void doError(java.io.File,java.io.File) -> a
com.AdLitteram.jSpool.Properties.XmlChannelHandler -> f:
    java.util.HashMap props -> a
    com.AdLitteram.jSpool.Gui.MainFrame frame -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    java.lang.String getLocationString(org.xml.sax.SAXParseException) -> a
com.AdLitteram.jSpool.Properties.XmlChannelReader -> aC:
    boolean read(com.AdLitteram.jSpool.Gui.MainFrame,java.lang.String) -> a
com.AdLitteram.jSpool.Properties.XmlMergerHandler -> G:
    com.AdLitteram.jSpool.Pdf.PdfMerger pdfMerger -> a
    java.util.HashMap initProps -> a
    java.util.HashMap textProps -> b
    java.util.HashMap imageProps -> c
    java.util.HashMap pdfProps -> d
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    java.util.HashMap getAttributes(org.xml.sax.Attributes,java.util.HashMap) -> a
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    java.lang.String getLocationString(org.xml.sax.SAXParseException) -> a
com.AdLitteram.jSpool.Properties.XmlMergerReader -> p:
    boolean read(com.AdLitteram.jSpool.Pdf.PdfMerger,java.lang.String) -> a
com.AdLitteram.jSpool.Properties.XmlPropertiesHandler -> U:
    java.util.Properties props -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    java.lang.String getLocationString(org.xml.sax.SAXParseException) -> a
com.AdLitteram.jSpool.Properties.XmlPropertiesReader -> W:
    boolean read(java.util.Properties,java.lang.String) -> a
com.AdLitteram.jSpool.Sources.AbstractSource -> A:
    com.AdLitteram.jSpool.Channel channel -> a
    java.util.HashMap fileMap -> a
    java.util.HashMap propertyMap -> b
    void init(com.AdLitteram.jSpool.Channel) -> a
    void close() -> a
    boolean setParameters() -> a
    javax.swing.JPanel buildPanel() -> a
    java.lang.String getName() -> a
    boolean run(com.AdLitteram.jSpool.Targets.AbstractTarget) -> a
    boolean processDir(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile,com.AdLitteram.jSpool.Targets.AbstractTarget) -> a
com.AdLitteram.jSpool.Sources.FtpSource -> l:
    java.lang.String[] modeArray -> a
    javax.swing.JTextField serverField -> a
    javax.swing.JTextField userField -> b
    javax.swing.JTextField dirField -> c
    javax.swing.JPasswordField passwdField -> a
    javax.swing.JComboBox modeCombo -> a
    com.AdLitteram.jSpool.FtpConnexion ftpConnex -> a
    java.lang.String getName() -> a
    void close() -> a
    boolean run(com.AdLitteram.jSpool.Targets.AbstractTarget) -> a
    javax.swing.JPanel buildPanel() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Sources.LocalDir -> r:
    java.lang.String[] sortArray -> a
    javax.swing.JTextField sourceField -> a
    javax.swing.JCheckBox checksumCheck -> a
    javax.swing.JComboBox sortCombo -> a
    java.lang.String getName() -> a
    boolean run(com.AdLitteram.jSpool.Targets.AbstractTarget) -> a
    javax.swing.JPanel buildPanel() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Sources.LocalScript -> af:
    com.AdLitteram.jSpool.Targets.Shell shell -> a
    org.mozilla.javascript.Script script -> a
    javax.swing.JTextField execField -> a
    java.lang.String toString() -> toString
    java.lang.String getName() -> a
    void close() -> a
    boolean run(com.AdLitteram.jSpool.Targets.AbstractTarget) -> a
    java.lang.Object[] runScript() -> a
    java.lang.Object convertFromJS(java.lang.String,java.lang.Class,org.mozilla.javascript.Context,com.AdLitteram.jSpool.Targets.Shell) -> a
    org.mozilla.javascript.Script compile(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> a
    javax.swing.JPanel buildPanel() -> a
    boolean setParameters() -> a
    javax.swing.JTextField access$000(com.AdLitteram.jSpool.Sources.LocalScript) -> a
com.AdLitteram.jSpool.Sources.LocalScript$1 -> as:
    com.AdLitteram.jSpool.Sources.LocalScript this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.StreamGobbler -> com.AdLitteram.jSpool.i:
    java.io.InputStream is -> a
    java.lang.String type -> a
    java.io.OutputStream os -> a
    void run() -> run
com.AdLitteram.jSpool.Targets.AbstractTarget -> aL:
    com.AdLitteram.jSpool.Channel channel -> a
    void close() -> a
    boolean setParameters() -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
com.AdLitteram.jSpool.Targets.FtpMove -> ad:
    java.lang.String[] modeArray -> a
    javax.swing.JTextField serverField -> a
    javax.swing.JTextField userField -> b
    javax.swing.JTextField dirField -> c
    javax.swing.JPasswordField passwdField -> a
    javax.swing.JComboBox modeCombo -> a
    javax.swing.JCheckBox subDirCheck -> a
    javax.swing.JCheckBox cleanCharCheck -> b
    javax.swing.JCheckBox cleanSpaceCheck -> c
    com.AdLitteram.jSpool.FtpConnexion ftpConnex -> a
    java.lang.String getName() -> a
    void close() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Targets.LocalExec -> at:
    javax.swing.JTextField execField -> a
    javax.swing.JTextField param1Field -> b
    javax.swing.JTextField param2Field -> c
    javax.swing.JCheckBox syncCheck -> a
    javax.swing.JCheckBox removeCheck -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    java.lang.String replace(java.lang.String,java.io.File) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Targets.LocalMove -> L:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    javax.swing.JTextField target3Field -> c
    javax.swing.JCheckBox subDirCheck -> a
    javax.swing.JCheckBox renameCheck -> b
    javax.swing.JTextField srcRenameField -> d
    javax.swing.JTextField trgRenameField -> e
    javax.swing.JLabel srcRenameLabel -> a
    javax.swing.JLabel trgRenameLabel -> b
    java.util.regex.Pattern pattern -> a
    javax.swing.JCheckBox cleanCharCheck -> c
    javax.swing.JCheckBox cleanSpaceCheck -> d
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    boolean doCopy(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile,java.io.File,java.lang.String) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    void setEnabledRename(boolean) -> a
    boolean setParameters() -> a
    java.lang.String rename(java.util.regex.Pattern,java.lang.String,java.lang.String) -> a
    javax.swing.JCheckBox access$000(com.AdLitteram.jSpool.Targets.LocalMove) -> a
    void access$100(com.AdLitteram.jSpool.Targets.LocalMove,boolean) -> a
com.AdLitteram.jSpool.Targets.LocalMove$1 -> E:
    com.AdLitteram.jSpool.Targets.LocalMove this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Targets.MailSend -> q:
    javax.swing.JTextField serverField -> a
    javax.swing.JTextField userField -> b
    javax.swing.JPasswordField passwdField -> a
    javax.swing.JTextField toUser1Field -> c
    javax.swing.JTextField fromUserField -> d
    javax.swing.JTextField subjectField -> e
    javax.swing.JTextField messageField -> f
    java.lang.String getName() -> a
    void close() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Targets.PdfAddInfo -> aF:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Targets.PdfBuild -> au:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Targets.PdfDecrypt -> T:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Targets.PdfMerge -> Z:
    javax.swing.JTextField confField -> a
    javax.swing.JTextField outputField -> b
    javax.swing.JTextField errorField -> c
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Targets.PdfRecrypt -> J:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Targets.PdfTransform -> ab:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Targets.Purge -> ac:
    javax.swing.JTextField dayField -> a
    javax.swing.JTextField hourField -> b
    javax.swing.JTextField minField -> c
    javax.swing.JTextField secField -> d
    javax.swing.JTextField sizeField -> e
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.Targets.ScriptExec -> d:
    javax.swing.JTextField execField -> a
    com.AdLitteram.jSpool.Targets.Shell shell -> a
    org.mozilla.javascript.Script script -> a
    java.lang.String getName() -> a
    void close() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    org.mozilla.javascript.Script compile(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
    javax.swing.JTextField access$000(com.AdLitteram.jSpool.Targets.ScriptExec) -> a
com.AdLitteram.jSpool.Targets.ScriptExec$1 -> g:
    com.AdLitteram.jSpool.Targets.ScriptExec this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Targets.Shell -> R:
com.AdLitteram.jSpool.Targets.Unzip -> o:
    javax.swing.JTextField target1Field -> a
    java.lang.String getName() -> a
    int run(java.lang.String,com.AdLitteram.jSpool.Files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.AdLitteram.jSpool.TimeHandler -> com.AdLitteram.jSpool.j:
    com.AdLitteram.jSpool.Gui.LogArea logWriter$53f8fcb2 -> a
    java.util.ArrayList recordsList -> a
    java.lang.Thread thread -> a
    long period -> a
    void run() -> run
    void publish(java.util.logging.LogRecord) -> publish
    void push() -> a
    void close() -> close
    void flush() -> flush
com.AdLitteram.jSpool.Utils -> com.AdLitteram.jSpool.m:
    int intValue(java.lang.Object) -> a
    float floatValue(java.lang.Object) -> a
    double doubleValue(java.lang.Object) -> a
    int intValue(java.lang.Object,int) -> a
    float floatValue(java.lang.Object,float) -> a
    javax.swing.JButton createBrowseButton(java.awt.Component,javax.swing.JTextField,javax.swing.filechooser.FileFilter,java.lang.String) -> a
    javax.swing.JButton createDirButton(java.awt.Component,javax.swing.JTextField) -> a
    java.net.URL file2Url(java.lang.String) -> a
    javax.swing.ImageIcon loadIcon(java.lang.String) -> a
    java.awt.Image loadImage(java.lang.String) -> a
    void centerToParent(java.awt.Component,java.awt.Component) -> a
    void saveBounds(java.awt.Component,java.lang.String) -> a
    void loadBounds(java.awt.Component,java.lang.String) -> b
    javax.swing.JMenu buildMenu(java.lang.String) -> a
    javax.swing.JButton buildButton(java.lang.String,java.lang.Object) -> a
    javax.swing.JMenuItem buildMenuItem(java.lang.String,java.lang.String,java.lang.Object) -> a
    void showError(java.lang.String) -> a
    void beep() -> a
    int minMax(int,int,int) -> a
    java.lang.String getBasename(java.io.File) -> a
    java.lang.String getBasename(java.lang.String) -> a
    java.lang.String getPrefix(java.lang.String) -> b
    java.io.File getExtFile(java.io.File,java.lang.String) -> a
    void appendAndNormalize(java.lang.StringBuffer,java.lang.String) -> a
    java.lang.String capitalize(java.lang.String) -> c
com.AdLitteram.jSpool.Utils$1 -> com.AdLitteram.jSpool.a:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.Utils$2 -> com.AdLitteram.jSpool.b:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.AdLitteram.jSpool.XLocale -> com.AdLitteram.jSpool.h:
    java.util.Comparator cmpLoc1 -> a
    java.util.Comparator cmpLoc2 -> b
    java.util.Locale uilocale -> a
    java.util.Locale getUILocale() -> a
    void setUILocale(java.util.Locale) -> a
com.AdLitteram.jSpool.XLocale$1 -> com.AdLitteram.jSpool.e:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.AdLitteram.jSpool.XLocale$2 -> com.AdLitteram.jSpool.d:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.AdLitteram.jSpool.XLog -> com.AdLitteram.jSpool.o:
    java.util.logging.Logger logger -> a
    com.AdLitteram.jSpool.JDBCLogHandler jdbcHandler -> a
    java.util.logging.Logger getLogger() -> a
    void addJDBCHandler(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.AdLitteram.jSpool.XProp -> com.AdLitteram.jSpool.f:
    java.util.Properties properties -> a
    java.net.URL getResource(java.lang.String) -> a
    void putProperty(java.lang.String,java.lang.String) -> b
    void put(java.lang.String,java.lang.String) -> a
    void put(java.lang.String,int) -> a
    java.lang.String get(java.lang.String) -> a
    java.lang.String getProperty(java.lang.String,java.lang.String) -> b
    java.lang.String get(java.lang.String,java.lang.String) -> a
    boolean getBoolean(java.lang.String,boolean) -> a
    java.lang.String getMessage(java.lang.String) -> b
    java.lang.String getMessage(java.lang.String,java.lang.Object[]) -> a
    void loadXmlProperties(java.util.Properties,java.net.URL) -> a
    void saveProperties(java.lang.String) -> a
com.AdLitteram.jSpool.Xml.XPropertiesHandler -> w:
    java.util.Properties props -> a
    java.lang.StringBuffer buffer -> a
    java.lang.String key -> a
    java.lang.String prefix -> b
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    java.lang.String getLocationString(org.xml.sax.SAXParseException) -> a
com.AdLitteram.jSpool.Xml.XPropertiesReader -> aq:
    boolean read(java.util.Properties,java.lang.String,org.xml.sax.InputSource) -> a
