com.adlitteram.jspool.Channel -> com.adlitteram.jspool.a:
    java.lang.Class[] sourceHandlers -> a
    java.lang.Class[] targetHandlers -> b
    java.util.logging.Logger logger -> a
    com.adlitteram.jspool.gui.MainFrame frame -> a
    java.lang.Thread clockThread -> a
    java.util.HashMap properties -> a
    java.util.HashMap contextMap -> b
    int status -> a
    boolean isSleeping -> a
    boolean isRunning -> b
    java.util.regex.Pattern regexp -> a
    com.adlitteram.jspool.sources.AbstractSource[] srcHandlers -> a
    com.adlitteram.jspool.targets.AbstractTarget[] trgHandlers -> a
    int progressVal -> b
    java.lang.String uploadFilename -> a
    java.lang.String downloadFilename -> b
    java.util.logging.Logger getLogger() -> a
    void logInfo(java.lang.String) -> a
    void logWarning(java.lang.String,java.lang.Throwable) -> a
    java.lang.String toString() -> toString
    java.lang.String getID() -> a
    int getStability() -> a
    boolean listSubDir() -> a
    long deleteSubDirDelay() -> a
    boolean zeroLength() -> b
    boolean autoStart() -> c
    boolean setRegexp() -> d
    java.util.regex.Pattern getRegexp() -> a
    void setStatus(int) -> a
    int getStatus() -> b
    java.lang.Object getContextValue(java.lang.String) -> a
    void setContextValue(java.lang.String,java.lang.Object) -> a
    java.util.HashMap getProperties() -> a
    void unsetProperty(java.lang.String) -> b
    void setProperty(java.lang.Object,java.lang.Object) -> a
    java.lang.String getStringProp(java.lang.Object) -> a
    java.lang.String getStringProp(java.lang.Object,java.lang.String) -> a
    boolean getBooleanProp(java.lang.Object,boolean) -> a
    int getIntProp(java.lang.Object,int) -> a
    long getLongProp(java.lang.Object,long) -> a
    java.lang.String getSrcHandlerName(int) -> a
    java.lang.String getTrgHandlerName(int) -> b
    void updateHandlers() -> e
    com.adlitteram.jspool.sources.AbstractSource getSrcHandler() -> a
    com.adlitteram.jspool.targets.AbstractTarget getTrgHandler() -> a
    java.lang.String getSourceName() -> b
    java.lang.String getTargetName() -> c
    void start() -> a
    void run() -> run
    void stop() -> b
    void disable() -> c
    void enable() -> d
    boolean isRunning() -> e
    boolean isStopped() -> f
    void update(int) -> b
    int getProgress() -> c
    java.lang.String getDownloadFilename() -> d
    java.lang.String getUploadFilename() -> e
    void setDownloadFilename(java.lang.String) -> c
    void setUploadFilename(java.lang.String) -> d
com.adlitteram.jspool.DirectHandler -> com.adlitteram.jspool.b:
    com.adlitteram.jspool.LogWriter logWriter -> a
    void publish(java.util.logging.LogRecord) -> publish
    void close() -> close
    void flush() -> flush
com.adlitteram.jspool.FilenameCleaner -> com.adlitteram.jspool.FilenameCleaner:
    java.lang.String[] CHAR_MAP -> CHAR_MAP
    java.lang.String clean(java.lang.String) -> clean
    java.lang.String clean(java.lang.String,java.lang.String[]) -> clean
com.adlitteram.jspool.FtpConnexion -> com.adlitteram.jspool.c:
    java.io.PrintWriter logWriter -> a
    com.enterprisedt.net.ftp.FTPClient client -> a
    com.adlitteram.jspool.Channel channel -> a
    java.lang.String server -> a
    java.lang.String user -> b
    java.lang.String passwd -> c
    java.lang.String homedir -> d
    com.enterprisedt.net.ftp.FTPConnectMode mode -> a
    long fileSize -> a
    com.enterprisedt.net.ftp.FTPClient getClient() -> a
    com.adlitteram.jspool.Channel getChannel() -> a
    java.lang.String getDir() -> a
    boolean isConnected() -> a
    void connect() -> a
    void chhomedir() -> b
    void close() -> c
    void createDir(java.lang.String) -> a
    void uploadFile(java.lang.String,java.lang.String,java.lang.String) -> a
    void bytesTransferred(long) -> bytesTransferred
    void setFileSize(long) -> a
    com.adlitteram.jspool.Channel access$000(com.adlitteram.jspool.FtpConnexion) -> a
    com.enterprisedt.net.ftp.FTPClient access$100(com.adlitteram.jspool.FtpConnexion) -> a
com.adlitteram.jspool.FtpConnexion$1 -> com.adlitteram.jspool.d:
    int val$progress -> a
    com.adlitteram.jspool.FtpConnexion this$0 -> a
    void run() -> run
com.adlitteram.jspool.HandlersManager -> com.adlitteram.jspool.e:
    boolean isNative -> a
    java.awt.FileDialog awtChooser -> a
    com.adlitteram.jspool.gui.DirectoryDialog swingChooser -> a
    java.io.File selectedDir -> a
    int showDialog() -> a
    java.io.File getSelectedDirectory() -> a
com.adlitteram.jspool.LogWriter -> com.adlitteram.jspool.f:
    void write(java.util.logging.LogRecord) -> a
com.adlitteram.jspool.Main -> com.adlitteram.jspool.Main:
    java.lang.String HOME_DIR -> a
    java.lang.String PROG_DIR -> f
    java.lang.String CONF_DIR -> g
    java.lang.String LANG_DIR -> b
    java.lang.String USER_CONF_DIR -> c
    java.lang.String USER_LOG_DIR -> d
    java.lang.String USER_PROP_FILE -> e
    java.util.logging.Logger logger -> a
    com.adlitteram.jspool.gui.MainFrame mainFrame -> a
    javax.swing.InputMap inputMap -> a
    javax.swing.ActionMap actionMap -> a
    void addAction(javax.swing.Action) -> a
    javax.swing.Action getAction(java.lang.String) -> a
    com.adlitteram.jspool.gui.MainFrame getMainFrame() -> a
    void quit() -> a
    void main(java.lang.String[]) -> main
    com.adlitteram.jspool.gui.MainFrame access$002(com.adlitteram.jspool.gui.MainFrame) -> a
com.adlitteram.jspool.Main$1 -> com.adlitteram.jspool.g:
    void run() -> run
com.adlitteram.jspool.Utils -> com.adlitteram.jspool.h:
    java.util.logging.Logger logger -> a
    java.net.URL file2Url(java.lang.String) -> a
    javax.swing.JMenu buildMenu(java.lang.String) -> a
    javax.swing.JButton buildButton(java.lang.String,java.lang.Object) -> a
    javax.swing.JMenuItem buildMenuItem(java.lang.String,java.lang.String,java.lang.Object) -> a
    void showError(java.lang.String) -> a
    java.lang.String cleanFTPPath(java.lang.String) -> a
    void beep() -> a
    java.lang.String getBasename(java.io.File) -> a
    java.lang.String getBasename(java.lang.String) -> b
    java.lang.String getPrefix(java.lang.String) -> c
    java.io.File getExtFile(java.io.File,java.lang.String) -> a
    void appendAndNormalize(java.lang.StringBuffer,java.lang.String) -> a
    java.lang.String capitalize(java.lang.String) -> d
    void sleep(long) -> a
com.adlitteram.jspool.XLocale -> com.adlitteram.jspool.i:
    java.util.logging.Logger logger -> a
    java.util.Comparator cmpLoc1 -> a
    java.util.Comparator cmpLoc2 -> b
    java.util.Locale uilocale -> a
    java.util.Locale getUILocale() -> a
    void setUILocale(java.util.Locale) -> a
com.adlitteram.jspool.XLocale$1 -> com.adlitteram.jspool.j:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.adlitteram.jspool.XLocale$2 -> com.adlitteram.jspool.k:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.adlitteram.jspool.XProp -> com.adlitteram.jspool.l:
    java.util.logging.Logger logger -> a
    java.util.Properties properties -> a
    java.net.URL getResource(java.lang.String) -> a
    void putProperty(java.lang.String,java.lang.String) -> b
    void put(java.lang.String,java.lang.String) -> a
    void put(java.lang.String,int) -> a
    java.lang.String get(java.lang.String) -> a
    java.lang.String getProperty(java.lang.String,java.lang.String) -> a
    java.lang.String get(java.lang.String,java.lang.String) -> b
    boolean getBoolean(java.lang.String,boolean) -> a
    int getInt(java.lang.String,int) -> a
    java.lang.String getMessage(java.lang.String) -> b
    java.lang.String getMessage(java.lang.String,java.lang.Object[]) -> a
    void loadXmlProperties(java.util.Properties,java.net.URL) -> a
    void saveProperties(java.lang.String) -> a
com.adlitteram.jspool.actions.About -> a:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.CopyChannel -> b:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.DestroyChannel -> c:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.DisableChannel -> d:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.EnableChannel -> e:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.LowerChannel -> f:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.ModifyChannel -> g:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.NewChannel -> h:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.Preferences -> i:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.Quit -> j:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.ResetLogArea -> k:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.StartAllChannels -> l:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.StartChannel -> m:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.StopAllChannels -> n:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.StopChannel -> o:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.actions.UpperChannel -> p:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.files.FtpSourceFile -> q:
    com.adlitteram.jspool.FtpConnexion ftpConnex -> a
    com.enterprisedt.net.ftp.FTPFile ftpFile -> a
    java.lang.String dir -> a
    long length -> a
    java.io.File tmpFile -> a
    java.lang.String getPath() -> a
    long getLength() -> a
    java.lang.String getName() -> b
    boolean exists() -> a
    boolean canRead() -> b
    boolean isDirectory() -> c
    long lastModified() -> b
    boolean delete() -> d
    boolean close() -> e
    java.io.File getFile() -> a
    void init(long) -> a
    void process(long) -> b
    com.adlitteram.jspool.files.SourceFile[] listFiles(java.util.regex.Pattern) -> a
com.adlitteram.jspool.files.LocalFile -> r:
    java.io.File file -> a
    long checksum -> a
    long length -> b
    java.util.regex.Pattern regexp -> a
    boolean useChecksum -> a
    java.util.Comparator alphaSort -> a
    java.util.Comparator alphaInvSort -> b
    java.util.Comparator dateSort -> c
    java.util.Comparator dateInvSort -> d
    java.lang.String getPath() -> a
    java.io.File getFile() -> a
    long getLength() -> a
    long lastModified() -> b
    boolean exists() -> a
    boolean canRead() -> b
    java.lang.String getName() -> b
    boolean delete() -> d
    boolean close() -> e
    void init(long) -> a
    void process(long) -> b
    long computeChecksum() -> c
    boolean isDirectory() -> c
    com.adlitteram.jspool.files.SourceFile[] listFiles(java.util.regex.Pattern) -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.adlitteram.jspool.files.LocalFile$1 -> s:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.adlitteram.jspool.files.LocalFile$2 -> t:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.adlitteram.jspool.files.LocalFile$3 -> u:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.adlitteram.jspool.files.LocalFile$4 -> v:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.adlitteram.jspool.files.SourceFile -> w:
    int sortOrder -> a
    int maxStability -> b
    int stability -> c
    boolean isStabilized() -> f
    boolean keepSortOrder() -> g
    void init(long) -> a
    void process(long) -> b
    java.io.File getFile() -> a
    java.lang.String getPath() -> a
    java.lang.String getName() -> b
    long getLength() -> a
    boolean exists() -> a
    boolean canRead() -> b
    boolean delete() -> d
    boolean close() -> e
    boolean isDirectory() -> c
    long lastModified() -> b
    com.adlitteram.jspool.files.SourceFile[] listFiles(java.util.regex.Pattern) -> a
    void copyTo(java.io.File) -> a
com.adlitteram.jspool.framework.KComboBox -> x:
    void setSelectedObject(java.lang.Object) -> a
    java.lang.Object getSelectedObject() -> a
com.adlitteram.jspool.framework.ObjectString -> y:
    java.lang.Object object -> a
    java.lang.String label -> a
    java.lang.String toString() -> toString
    java.lang.Object getObject() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.adlitteram.jspool.framework.StreamFormatter -> z:
    boolean brief -> a
    boolean trunc -> b
    boolean withMethods -> c
    boolean withClasses -> d
    java.util.Date dt -> a
    java.text.SimpleDateFormat fmt -> a
    java.text.SimpleDateFormat bfmt -> b
    java.lang.String eol -> a
    void setTruncateLoggerName(boolean) -> a
    void setBrief(boolean) -> b
    void setWithMethods(boolean) -> c
    void setWithClasses(boolean) -> d
    void checkProps() -> a
    java.lang.String format(java.util.logging.LogRecord) -> format
    void access$000(com.adlitteram.jspool.framework.StreamFormatter) -> a
com.adlitteram.jspool.framework.StreamFormatter$1 -> A:
    com.adlitteram.jspool.framework.StreamFormatter this$0 -> a
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.adlitteram.jspool.framework.XHelp -> B:
    void updateComponentUI() -> a
com.adlitteram.jspool.framework.XLog -> C:
    com.adlitteram.jspool.framework.StreamFormatter streamFormatter -> a
    java.util.logging.ConsoleHandler consoleHandler -> a
    java.util.logging.FileHandler fileHandler -> a
    java.util.logging.Logger createLogger(java.lang.Class) -> a
com.adlitteram.jspool.framework.XLook -> D:
    java.util.logging.Logger logger -> a
    java.lang.String[] LOOKS -> a
    com.adlitteram.jspool.framework.ObjectString[] LOOK_NAMES -> a
    com.adlitteram.jspool.framework.ObjectString[] getAvailableLookAndFeelNames() -> a
    void init() -> a
    void setLookAndFeel(java.lang.String) -> a
    java.lang.String getLookAndFeel() -> a
    void setLookAndFeel(java.lang.String,boolean) -> a
com.adlitteram.jspool.framework.utils.ExecUtils -> E:
    void exec(java.lang.String[],java.io.File,long,java.io.OutputStream) -> a
com.adlitteram.jspool.framework.utils.ExecUtils$ExecThread -> F:
    java.lang.Process process -> a
    java.lang.String[] command -> a
    java.io.File dir -> a
    com.adlitteram.jspool.framework.utils.StreamGobbler errorGobbler -> a
    com.adlitteram.jspool.framework.utils.StreamGobbler outputGobbler -> b
    java.io.OutputStream redirect -> a
    void close() -> a
    void run() -> run
com.adlitteram.jspool.framework.utils.GuiUtils -> G:
    java.util.logging.Logger logger -> a
    java.lang.String INFO -> a
    javax.swing.Icon OPEN_ICON -> a
    void centerToParent(java.awt.Component,java.awt.Component) -> a
    void saveBounds(java.awt.Component,java.lang.String) -> a
    void loadBounds(java.awt.Component,java.lang.String) -> b
    javax.swing.Icon loadIcon(java.lang.String) -> a
    java.awt.Image loadImage(java.lang.String) -> a
    void showMessage(java.lang.Object) -> a
    javax.swing.JButton createBrowseButton(java.awt.Component,javax.swing.JTextField,javax.swing.filechooser.FileFilter,java.lang.String) -> a
    javax.swing.JButton createDirButton(java.awt.Component,javax.swing.text.JTextComponent) -> a
    java.awt.Toolkit getToolkit() -> a
    void invertFocusTraversalBehaviour(javax.swing.JTextArea) -> a
com.adlitteram.jspool.framework.utils.GuiUtils$1 -> H:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.framework.utils.GuiUtils$2 -> I:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.framework.utils.GuiUtils$TextInserter -> J:
    javax.swing.JTextArea textArea -> a
    java.lang.String insertable -> a
    void applyTabBinding(javax.swing.JTextArea) -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.framework.utils.NumUtils -> K:
    int intValue(java.lang.Object) -> a
    float floatValue(java.lang.Object) -> a
    double doubleValue(java.lang.Object) -> a
    int intValue(java.lang.Object,int) -> a
    float floatValue(java.lang.Object,float) -> a
    int clamp(int,int,int) -> a
    double[] stringToDoubleArray(java.lang.String) -> a
com.adlitteram.jspool.framework.utils.PlatformUtils -> L:
    java.lang.String HOME_DIR -> a
    java.lang.String getMacOSXProgDir() -> a
    java.lang.String appendSeparator(java.lang.String) -> a
com.adlitteram.jspool.framework.utils.StreamGobbler -> M:
    java.io.InputStream is -> a
    java.io.OutputStream os -> a
    void run() -> run
com.adlitteram.jspool.gui.AboutDialog -> N:
    java.util.logging.Logger logger -> a
    java.awt.Image img -> a
    int width -> a
    int height -> b
    java.awt.image.BufferedImage readImage() -> a
    java.awt.Image access$000() -> a
    java.awt.Image access$002(java.awt.Image) -> a
    java.awt.image.BufferedImage access$100(com.adlitteram.jspool.gui.AboutDialog) -> a
    int access$200() -> a
com.adlitteram.jspool.gui.AboutDialog$1 -> O:
    com.adlitteram.jspool.gui.AboutDialog this$0 -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
com.adlitteram.jspool.gui.ChannelDialog -> P:
    java.util.logging.Logger logger -> a
    int OK -> a
    int CANCEL -> b
    com.adlitteram.jspool.Channel channel -> a
    int exit -> c
    javax.swing.JTextField identField -> a
    javax.swing.JTextField tempoField -> b
    javax.swing.JTextField stabiField -> c
    javax.swing.JTextField filterField -> d
    javax.swing.JTextField maxField -> e
    javax.swing.JTextField delSubdirField -> f
    javax.swing.JCheckBox recCheck -> a
    javax.swing.JCheckBox zeroCheck -> b
    javax.swing.JCheckBox autostartCheck -> c
    javax.swing.JPanel srcPanel -> a
    javax.swing.JPanel modePanel -> b
    javax.swing.JComboBox modeCombo -> a
    javax.swing.JComboBox srcCombo -> b
    int showDialog() -> a
    javax.swing.JPanel buildSrcPanel() -> a
    javax.swing.JPanel buildModePanel() -> b
    void OKPressed() -> a
    void cancelPressed() -> b
    javax.swing.JCheckBox access$000(com.adlitteram.jspool.gui.ChannelDialog) -> a
    javax.swing.JTextField access$100(com.adlitteram.jspool.gui.ChannelDialog) -> a
    javax.swing.JPanel access$200(com.adlitteram.jspool.gui.ChannelDialog) -> a
    javax.swing.JComboBox access$300(com.adlitteram.jspool.gui.ChannelDialog) -> a
    javax.swing.JPanel access$400(com.adlitteram.jspool.gui.ChannelDialog) -> b
    javax.swing.JComboBox access$500(com.adlitteram.jspool.gui.ChannelDialog) -> b
com.adlitteram.jspool.gui.ChannelDialog$1 -> Q:
    com.adlitteram.jspool.gui.ChannelDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.gui.ChannelDialog$2 -> R:
    com.adlitteram.jspool.gui.ChannelDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.gui.ChannelDialog$3 -> S:
    com.adlitteram.jspool.gui.ChannelDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.gui.ChannelDialog$4 -> T:
    com.adlitteram.jspool.gui.ChannelDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.gui.ChannelDialog$5 -> U:
    com.adlitteram.jspool.gui.ChannelDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.gui.ChannelModel -> V:
    java.lang.String[] names -> a
    com.adlitteram.jspool.gui.MainFrame frame -> a
    void updateChannel(com.adlitteram.jspool.Channel) -> a
    void updateDownBar(com.adlitteram.jspool.Channel) -> b
    void updateUpBar(com.adlitteram.jspool.Channel) -> c
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    java.lang.Object getValueAt(int,int) -> getValueAt
    java.lang.String getColumnName(int) -> getColumnName
    java.lang.Class getColumnClass(int) -> getColumnClass
    boolean isCellEditable(int,int) -> isCellEditable
    void setValueAt(java.lang.Object,int,int) -> setValueAt
com.adlitteram.jspool.gui.DirectoryChooser -> W:
    javax.swing.filechooser.FileSystemView fsv -> a
    java.io.File getSelectedDirectory() -> a
    void addActionListener(java.awt.event.ActionListener) -> a
    void valueChanged(javax.swing.event.TreeSelectionEvent) -> valueChanged
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    javax.swing.tree.TreePath mkPath(java.io.File) -> a
    javax.swing.filechooser.FileSystemView access$000() -> a
com.adlitteram.jspool.gui.DirectoryChooser$1 -> X:
    javax.swing.tree.TreePath val$path -> a
    com.adlitteram.jspool.gui.DirectoryChooser this$0 -> a
    void run() -> run
com.adlitteram.jspool.gui.DirectoryChooser$DirNode -> Y:
    java.io.File getDir() -> a
    int getChildCount() -> getChildCount
    java.util.Enumeration children() -> children
    boolean isLeaf() -> isLeaf
    void populateChildren() -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.adlitteram.jspool.gui.DirectoryDialog -> Z:
    int status -> a
    java.lang.String dirname -> a
    com.adlitteram.jspool.gui.DirectoryChooser dc -> a
    javax.swing.JButton okButton -> a
    java.awt.event.ActionListener approveListener -> a
    int showDialog() -> a
    java.io.File getSelectedDirectory() -> a
    com.adlitteram.jspool.gui.DirectoryChooser access$000(com.adlitteram.jspool.gui.DirectoryDialog) -> a
    int access$102(com.adlitteram.jspool.gui.DirectoryDialog,int) -> a
    javax.swing.JButton access$200(com.adlitteram.jspool.gui.DirectoryDialog) -> a
com.adlitteram.jspool.gui.DirectoryDialog$1 -> aa:
    com.adlitteram.jspool.gui.DirectoryDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.gui.DirectoryDialog$2 -> ab:
    com.adlitteram.jspool.gui.DirectoryDialog this$0 -> a
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.adlitteram.jspool.gui.DirectoryDialog$3 -> ac:
    com.adlitteram.jspool.gui.DirectoryDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.gui.DownloadBar -> ad:
    void setSelectedBlack() -> a
    java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
com.adlitteram.jspool.gui.FileChooser -> ae:
    boolean isNative -> a
    java.awt.FileDialog awtChooser -> a
    javax.swing.JFileChooser swingChooser -> a
    java.awt.Component parent -> a
    int mode -> a
    java.io.File selectedFile -> a
    int showAwtDialog(int) -> a
    int showSwingDialog(int,java.lang.String) -> a
    int showOpenDialog(java.lang.String) -> a
    int showSaveDialog(java.lang.String) -> b
    java.io.File getSelectedFile() -> a
    void setFile(java.lang.String) -> a
    void addFileFilter(javax.swing.filechooser.FileFilter) -> a
    int access$000(com.adlitteram.jspool.gui.FileChooser) -> a
    javax.swing.JFileChooser access$100(com.adlitteram.jspool.gui.FileChooser) -> a
com.adlitteram.jspool.gui.FileChooser$1 -> af:
    com.adlitteram.jspool.gui.FileChooser this$0 -> a
    void approveSelection() -> approveSelection
com.adlitteram.jspool.gui.FileChooser$2 -> ag:
    javax.swing.filechooser.FileFilter val$ff -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.adlitteram.jspool.gui.LogArea -> ah:
    org.apache.commons.lang.time.FastDateFormat format -> a
    int maxLogSize -> a
    void write(java.util.logging.LogRecord) -> a
    int access$000(com.adlitteram.jspool.gui.LogArea) -> a
com.adlitteram.jspool.gui.LogArea$LogDocument -> ai:
    com.adlitteram.jspool.gui.LogArea this$0 -> a
    void insertString(int,java.lang.String,javax.swing.text.AttributeSet) -> insertString
com.adlitteram.jspool.gui.LogContent -> aj:
    char[] empty -> a
    javax.swing.undo.UndoableEdit insertString(int,java.lang.String) -> insertString
    javax.swing.undo.UndoableEdit remove(int,int) -> remove
com.adlitteram.jspool.gui.MainFrame -> ak:
    java.util.logging.Logger logger -> a
    java.lang.String[] statusArray -> a
    com.adlitteram.jspool.gui.MainFrame thisFrame -> a
    com.jidesoft.swing.JideSplitPane splitPane -> a
    com.jidesoft.swing.JideTabbedPane logPane -> a
    com.adlitteram.jspool.gui.LogArea allLogArea -> a
    javax.swing.JTable tableView -> a
    java.util.ArrayList channelList -> a
    com.adlitteram.jspool.gui.ChannelModel channelModel -> a
    int lastSelectedRow -> a
    void saveProperties() -> a
    void loadConfig() -> d
    void resetLogArea() -> b
    void addLogArea(com.adlitteram.jspool.Channel) -> a
    void setLogTitle(com.adlitteram.jspool.Channel) -> b
    void removeLogArea(com.adlitteram.jspool.Channel) -> c
    java.util.ArrayList getChannels() -> a
    void saveConfig() -> c
    java.util.ArrayList access$000(com.adlitteram.jspool.gui.MainFrame) -> a
    com.adlitteram.jspool.gui.MainFrame access$100(com.adlitteram.jspool.gui.MainFrame) -> a
com.adlitteram.jspool.gui.MainFrame$1 -> al:
    com.adlitteram.jspool.gui.MainFrame this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
com.adlitteram.jspool.gui.MainFrame$2 -> am:
    com.adlitteram.jspool.gui.MainFrame this$0 -> a
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
com.adlitteram.jspool.gui.PrefDialog -> an:
    com.adlitteram.jspool.framework.KComboBox lookCombo -> a
    javax.swing.JRadioButton enButton -> a
    javax.swing.JRadioButton frButton -> b
    javax.swing.JCheckBox useJDBCLogCheck -> a
    javax.swing.JTextField driverField -> a
    javax.swing.JTextField urlField -> b
    javax.swing.JTextField userField -> c
    javax.swing.JPasswordField passwordField -> a
    javax.swing.JRadioButton access$000(com.adlitteram.jspool.gui.PrefDialog) -> a
    javax.swing.JCheckBox access$100(com.adlitteram.jspool.gui.PrefDialog) -> a
    javax.swing.JTextField access$200(com.adlitteram.jspool.gui.PrefDialog) -> a
    javax.swing.JTextField access$300(com.adlitteram.jspool.gui.PrefDialog) -> b
    javax.swing.JTextField access$400(com.adlitteram.jspool.gui.PrefDialog) -> c
    javax.swing.JPasswordField access$500(com.adlitteram.jspool.gui.PrefDialog) -> a
    com.adlitteram.jspool.framework.KComboBox access$600(com.adlitteram.jspool.gui.PrefDialog) -> a
com.adlitteram.jspool.gui.PrefDialog$1 -> ao:
    com.adlitteram.jspool.gui.PrefDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.gui.PrefDialog$2 -> ap:
    com.adlitteram.jspool.gui.PrefDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.gui.PrefDialog$3 -> aq:
    com.adlitteram.jspool.gui.PrefDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.gui.UploadBar -> ar:
    void setSelectedBlack() -> a
    java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
com.adlitteram.jspool.listeners.AbstractDisposer -> as:
    java.awt.Window parent -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.adlitteram.jspool.pdf.Counter -> at:
    java.lang.String HOME_DIR -> a
    java.lang.String PROG_DIR -> b
    java.lang.String USER_DIR1 -> c
    java.lang.String USER_DIR2 -> d
    java.lang.String USER_FILE1 -> e
    java.lang.String USER_FILE2 -> f
    int number -> a
    int next() -> a
    void load(java.lang.String) -> a
    void save(java.lang.String) -> b
com.adlitteram.jspool.pdf.PdfBuilder -> au:
    java.util.logging.Logger logger -> a
    int[] alignArray -> a
    com.adlitteram.jspool.Channel channel -> a
    java.io.File inputFile -> a
    java.io.File outputFile -> b
    java.io.File cnfDir -> c
    java.io.File errorDir -> d
    com.drew.metadata.Directory iptcDirectory -> a
    java.util.Properties properties -> a
    java.util.zip.ZipFile zfile -> a
    java.util.ArrayList imageList -> a
    java.util.ArrayList textList -> b
    int quantity -> a
    java.lang.String reference -> a
    java.lang.String source -> b
    java.lang.String category -> c
    java.lang.String address -> d
    java.lang.String note -> e
    java.lang.String odate -> f
    java.lang.String order -> g
    com.lowagie.text.pdf.PdfReader bgReader -> a
    com.lowagie.text.pdf.PdfStamper bgStamper -> a
    com.lowagie.text.pdf.PdfReader covReader -> b
    com.lowagie.text.pdf.PdfReader horReader -> c
    com.lowagie.text.pdf.PdfReader verReader -> d
    boolean build(java.lang.String,java.lang.String,java.lang.String) -> a
    int getOffset(java.lang.String) -> a
    void readZipFile() -> a
    void addText(com.lowagie.text.pdf.PdfContentByte,java.lang.String) -> a
    void extractText() -> b
    java.io.File getTempJpegFile(int) -> a
    java.lang.String rename(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String replaceText(java.lang.String) -> a
com.adlitteram.jspool.pdf.PdfDecryptor -> av:
    java.util.logging.Logger logger -> a
    byte[] ownerPassword -> a
    byte[] ownerPassword2 -> b
    boolean decrypt(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean setInfoMap(java.lang.String,java.lang.String,java.lang.String) -> b
    boolean recrypt(java.lang.String,java.lang.String,java.lang.String) -> c
com.adlitteram.jspool.pdf.PdfMerger -> aw:
    int[] alignArray -> a
    java.lang.String outname -> a
    org.w3c.dom.Document document -> a
    javax.xml.xpath.XPath xpath -> a
    com.lowagie.text.pdf.PdfReader bgReader -> a
    com.lowagie.text.pdf.PdfStamper stamper -> a
    int merge(java.lang.String,java.lang.String,java.lang.String) -> a
    void init(java.util.HashMap) -> a
    java.lang.String getXPathValue(java.util.HashMap) -> a
    void setText(java.util.HashMap) -> b
    java.lang.String processText(java.lang.String,java.lang.String) -> a
    void setImage(java.util.HashMap) -> c
    void setPdf(java.util.HashMap) -> d
com.adlitteram.jspool.pdf.PdfTransformer -> ax:
    java.util.logging.Logger logger -> a
    com.adlitteram.jspool.Channel channel -> a
    com.lowagie.text.pdf.PdfReader reader -> a
    java.util.HashMap infoMap -> a
    java.util.Properties properties -> a
    java.io.File outputDir -> a
    java.io.File inputFile -> b
    java.lang.String outputName -> a
    java.lang.String barCodText -> b
    double price -> a
    double totalPrice -> b
    double extraPrice -> c
    double extraTotalPrice -> d
    double redPrice -> e
    double redTotalPrice -> f
    double redExtraPrice -> g
    double redExtraTotalPrice -> h
    boolean isCoveredExtracted -> a
    int page -> a
    boolean transform(java.lang.String,java.lang.String,java.lang.String) -> a
    void saveTxtDescription() -> a
    void addHeaders(com.lowagie.text.Document) -> a
    void extractPages(boolean,double,double,double) -> a
    void addIndexPage(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,double,double,double) -> a
    void addTrailerPage(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,double,double,double) -> b
    void centerTemplate(com.lowagie.text.pdf.PdfTemplate,com.lowagie.text.pdf.PdfImportedPage,java.awt.geom.AffineTransform) -> a
    void showLogo(com.lowagie.text.pdf.PdfTemplate,java.lang.String,double,double,double) -> a
    void showBarcode(com.lowagie.text.pdf.PdfTemplate,double,double,double) -> a
    void showTextIndex(com.lowagie.text.pdf.PdfTemplate) -> a
    java.lang.String getPdfMetaData(java.lang.String) -> a
    java.lang.String getBarCodeText() -> a
    java.lang.String rename(java.lang.String,java.lang.String,java.lang.String) -> a
com.adlitteram.jspool.pdf.PdfUtils -> ay:
    java.util.logging.Logger logger -> a
    void recrypt(java.io.File,java.io.File,byte[]) -> a
    void addInfo(java.io.File,java.io.File,java.util.HashMap) -> a
    void decrypt(java.io.File,java.io.File,byte[]) -> b
com.adlitteram.jspool.pdf.Unzipper -> az:
    java.util.logging.Logger logger -> a
    boolean unzip(java.lang.String,java.lang.String,java.lang.String) -> a
    void doError(java.io.File,java.io.File) -> a
com.adlitteram.jspool.properties.XmlChannelHandler -> aA:
    java.util.logging.Logger logger -> a
    java.util.HashMap props -> a
    com.adlitteram.jspool.gui.MainFrame frame -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    java.lang.String getLocationString(org.xml.sax.SAXParseException) -> a
com.adlitteram.jspool.properties.XmlChannelReader -> aB:
    java.util.logging.Logger logger -> a
    boolean read(com.adlitteram.jspool.gui.MainFrame,java.net.URL) -> a
    boolean read(com.adlitteram.jspool.gui.MainFrame,java.lang.String) -> a
com.adlitteram.jspool.properties.XmlMergerHandler -> aC:
    java.util.logging.Logger logger -> a
    com.adlitteram.jspool.pdf.PdfMerger pdfMerger -> a
    java.util.HashMap initProps -> a
    java.util.HashMap textProps -> b
    java.util.HashMap imageProps -> c
    java.util.HashMap pdfProps -> d
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    java.util.HashMap getAttributes(org.xml.sax.Attributes,java.util.HashMap) -> a
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    java.lang.String getLocationString(org.xml.sax.SAXParseException) -> a
com.adlitteram.jspool.properties.XmlMergerReader -> aD:
    java.util.logging.Logger logger -> a
    boolean read(com.adlitteram.jspool.pdf.PdfMerger,java.lang.String) -> a
com.adlitteram.jspool.properties.XmlPropertiesHandler -> aE:
    java.util.Properties props -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    java.lang.String getLocationString(org.xml.sax.SAXParseException) -> a
com.adlitteram.jspool.properties.XmlPropertiesReader -> aF:
    boolean read(java.util.Properties,java.lang.String) -> a
com.adlitteram.jspool.sources.AbstractSource -> aG:
    com.adlitteram.jspool.Channel channel -> a
    java.util.HashMap fileMap -> a
    java.util.HashMap propertyMap -> b
    void init(com.adlitteram.jspool.Channel) -> a
    void close() -> a
    boolean setParameters() -> a
    javax.swing.JPanel buildPanel() -> a
    java.lang.String getName() -> a
    boolean run(com.adlitteram.jspool.targets.AbstractTarget) -> a
    boolean processDir(java.lang.String,com.adlitteram.jspool.files.SourceFile,com.adlitteram.jspool.targets.AbstractTarget) -> a
com.adlitteram.jspool.sources.FtpSource -> aH:
    java.lang.String[] modeArray -> a
    javax.swing.JTextField serverField -> a
    javax.swing.JTextField userField -> b
    javax.swing.JTextField dirField -> c
    javax.swing.JPasswordField passwdField -> a
    javax.swing.JComboBox modeCombo -> a
    com.adlitteram.jspool.FtpConnexion ftpConnex -> a
    java.lang.String getName() -> a
    void close() -> a
    boolean run(com.adlitteram.jspool.targets.AbstractTarget) -> a
    javax.swing.JPanel buildPanel() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.sources.LocalDir -> aI:
    java.lang.String[] sortArray -> a
    javax.swing.JTextField sourceField -> a
    javax.swing.JCheckBox checksumCheck -> a
    javax.swing.JComboBox sortCombo -> a
    java.lang.String getName() -> a
    boolean run(com.adlitteram.jspool.targets.AbstractTarget) -> a
    javax.swing.JPanel buildPanel() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.sources.LocalScript -> aJ:
    com.adlitteram.jspool.targets.Shell shell -> a
    org.mozilla.javascript.Script script -> a
    javax.swing.JTextField execField -> a
    java.lang.String toString() -> toString
    java.lang.String getName() -> a
    void close() -> a
    boolean run(com.adlitteram.jspool.targets.AbstractTarget) -> a
    java.lang.Object[] runScript() -> a
    java.lang.Object convertFromJS(java.lang.String,java.lang.Class,org.mozilla.javascript.Context,com.adlitteram.jspool.targets.Shell) -> a
    org.mozilla.javascript.Script compile(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> a
    javax.swing.JPanel buildPanel() -> a
    boolean setParameters() -> a
    void exec(java.lang.String,java.lang.String) -> a
    javax.swing.JTextField access$000(com.adlitteram.jspool.sources.LocalScript) -> a
com.adlitteram.jspool.sources.LocalScript$1 -> aK:
    com.adlitteram.jspool.sources.LocalScript this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.targets.AbstractTarget -> com.adlitteram.jspool.targets.a:
    com.adlitteram.jspool.Channel channel -> a
    void init(com.adlitteram.jspool.Channel) -> a
    void close() -> a
    boolean setParameters() -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    java.lang.String getName() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
com.adlitteram.jspool.targets.FtpMove -> com.adlitteram.jspool.targets.b:
    java.lang.String[] modeArray -> a
    javax.swing.JTextField serverField -> a
    javax.swing.JTextField userField -> b
    javax.swing.JPasswordField passwdField -> a
    javax.swing.JTextField dirField -> c
    javax.swing.JTextField extField -> d
    javax.swing.JComboBox modeCombo -> a
    javax.swing.JCheckBox subDirCheck -> a
    javax.swing.JCheckBox cleanCharCheck -> b
    javax.swing.JCheckBox cleanSpaceCheck -> c
    javax.swing.JTextField replaceField -> e
    javax.swing.JTextField destinationField -> f
    com.adlitteram.jspool.FtpConnexion ftpConnex -> a
    java.lang.String getName() -> a
    void close() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    void sendToFtp(com.adlitteram.jspool.FtpConnexion,com.adlitteram.jspool.files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.targets.LocalExec -> com.adlitteram.jspool.targets.c:
    javax.swing.JTextField execField -> a
    javax.swing.JTextField param1Field -> b
    javax.swing.JTextField param2Field -> c
    javax.swing.JCheckBox syncCheck -> a
    javax.swing.JCheckBox removeCheck -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    java.lang.String replace(java.lang.String,java.io.File) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.targets.LocalMove -> com.adlitteram.jspool.targets.d:
    javax.swing.JTextArea targetArea -> a
    javax.swing.JCheckBox subDirCheck -> a
    javax.swing.JCheckBox renameCheck -> b
    javax.swing.JTextField srcRenameField -> a
    javax.swing.JTextField trgRenameField -> b
    javax.swing.JLabel srcRenameLabel -> a
    javax.swing.JLabel trgRenameLabel -> b
    java.util.regex.Pattern pattern -> a
    javax.swing.JCheckBox cleanCharCheck -> c
    javax.swing.JCheckBox cleanSpaceCheck -> d
    javax.swing.JTextField replaceField -> c
    javax.swing.JTextField destinationField -> d
    java.lang.String getName() -> a
    void init(com.adlitteram.jspool.Channel) -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    boolean doCopy(java.lang.String,com.adlitteram.jspool.files.SourceFile,java.io.File,java.lang.String) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    void setEnabledRename(boolean) -> a
    boolean setParameters() -> a
    java.lang.String rename(java.util.regex.Pattern,java.lang.String,java.lang.String) -> a
    javax.swing.JCheckBox access$000(com.adlitteram.jspool.targets.LocalMove) -> a
    void access$100(com.adlitteram.jspool.targets.LocalMove,boolean) -> a
com.adlitteram.jspool.targets.LocalMove$1 -> com.adlitteram.jspool.targets.e:
    com.adlitteram.jspool.targets.LocalMove this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.targets.MailSend -> com.adlitteram.jspool.targets.f:
    javax.swing.JTextField serverField -> a
    javax.swing.JTextField userField -> b
    javax.swing.JPasswordField passwdField -> a
    javax.swing.JTextField toUser1Field -> c
    javax.swing.JTextField fromUserField -> d
    javax.swing.JTextField subjectField -> e
    javax.swing.JTextField messageField -> f
    java.lang.String getName() -> a
    void close() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.targets.PdfAddInfo -> com.adlitteram.jspool.targets.g:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.targets.PdfBuild -> com.adlitteram.jspool.targets.h:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.targets.PdfDecrypt -> com.adlitteram.jspool.targets.i:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.targets.PdfMerge -> com.adlitteram.jspool.targets.j:
    javax.swing.JTextField confField -> a
    javax.swing.JTextField outputField -> b
    javax.swing.JTextField errorField -> c
    java.lang.String getName() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.targets.PdfRecrypt -> com.adlitteram.jspool.targets.k:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.targets.PdfTransform -> com.adlitteram.jspool.targets.l:
    javax.swing.JTextField target1Field -> a
    javax.swing.JTextField target2Field -> b
    java.lang.String getName() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.targets.Purge -> com.adlitteram.jspool.targets.m:
    javax.swing.JTextField dayField -> a
    javax.swing.JTextField hourField -> b
    javax.swing.JTextField minField -> c
    javax.swing.JTextField secField -> d
    javax.swing.JTextField sizeField -> e
    java.lang.String getName() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.targets.ScriptExec -> com.adlitteram.jspool.targets.n:
    javax.swing.JTextField execField -> a
    com.adlitteram.jspool.targets.Shell shell -> a
    org.mozilla.javascript.Script script -> a
    java.lang.String getName() -> a
    void close() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    org.mozilla.javascript.Script compile(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
    javax.swing.JTextField access$000(com.adlitteram.jspool.targets.ScriptExec) -> a
com.adlitteram.jspool.targets.ScriptExec$1 -> com.adlitteram.jspool.targets.o:
    com.adlitteram.jspool.targets.ScriptExec this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.adlitteram.jspool.targets.Shell -> com.adlitteram.jspool.targets.Shell:
    com.adlitteram.jspool.Channel channel -> a
    java.lang.Object _getValue(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> _getValue
    void _setValue(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> _setValue
    void _print(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> _print
    void _execFor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> _execFor
    void _exec2(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> _exec2
    void _exec(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> _exec
com.adlitteram.jspool.targets.Unzip -> com.adlitteram.jspool.targets.p:
    javax.swing.JTextField target1Field -> a
    java.lang.String getName() -> a
    int run(java.lang.String,com.adlitteram.jspool.files.SourceFile) -> a
    javax.swing.JPanel buildPanel$6ccceedb() -> a
    boolean setParameters() -> a
com.adlitteram.jspool.xml.XPropertiesHandler -> aL:
    java.util.logging.Logger logger -> a
    java.util.Properties props -> a
    java.lang.StringBuffer buffer -> a
    java.lang.String key -> a
    java.lang.String prefix -> b
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    java.lang.String getLocationString(org.xml.sax.SAXParseException) -> a
com.adlitteram.jspool.xml.XPropertiesReader -> aM:
    java.util.logging.Logger logger -> a
    boolean read(java.util.Properties,java.lang.String,java.net.URL) -> a
    boolean read(java.util.Properties,java.lang.String,org.xml.sax.InputSource) -> a
