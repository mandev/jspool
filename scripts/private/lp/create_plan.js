/* 
 * Emmanuel Deviller
 * 
 * _srcDir : the spooled directory (String)
 * _srcFile : the file found (SourceFile) 
 * _exit : exit value (_OK,_FAIL,_NOP,_KEEP) 
 *
 * Attention aux mots réservés : ex.  file.delete => file["delete"] )
 */

importPackage(Packages.java.io);
importPackage(Packages.java.util);
importPackage(Packages.org.apache.commons.io);
importPackage(Packages.org.apache.commons.lang);
importPackage(Packages.com.adlitteram.jspool);
importPackage(Packages.nu.xom);

// Debug
//_print("srcDir : " + _srcDir);
//_print("srcFile : " + _srcFile.getPath());
OUTPUT_DIRS = ["D:/METHODE/PROD/Plan", "D:/METHODE/PROD/Plan3"];
OUTPUT_DIRS2 = ["D:/LP/ArrMethode/plaques_config", "D:/LP/ArrMethode/pages/suivi"];

// 29/08/2012 17:31:19 
function getTime() {
    var d = new Date();
    return  pad(d.getDate()) + "/" + pad(d.getMonth() + 1) + "/" + d.getFullYear() + " " + pad(d.getHours()) + ":" + pad(d.getMinutes()) + ":" + pad(d.getSeconds());
}

function pad(num) {
    return (num < 10) ? "0" + num : "" + num;
}

function writeElement(document, dstFile) {
    _print("writeElement: " + dstFile);
    if (dstFile.exists())
        FileUtils.forceDelete(dstFile);
    if (!dstFile.getParentFile().exists())
        FileUtils.forceMkdir(dstFile.getParentFile());
    var os = new BufferedOutputStream(new FileOutputStream(dstFile));
    var serializer = new Serializer(os, "UTF-8");
    serializer.setIndent(3);
    serializer.write(document);
    os.close();
}

function getPageNum(pagearray, pnEditionNum) {
    for (var k = 0; k < pagearray.length; k++) {
        if (pnEditionNum == pagearray[k].getAttributeValue("pnEditionNumber"))
            return k;
    }
    return -1;
}

function getPageMax(pageNodes) {
    var pageMax = 0;
    for (var k = 0; k < pageNodes.size(); k++) {
        var pageNode = pageNodes.get(k);
        pageMax++;
        var pagePn = pageNode.getAttributeValue("pn");
        if (pagePn.contains(","))
            pageMax++;
    }
    return pageMax;
}

function createPageArray(pageNodes) {
    var pageArray = new Array();
    for (var k = 0; k < pageNodes.size(); k++) {
        var pageNode = pageNodes.get(k);
        pageArray.push(pageNode);
        var pagePn = pageNode.getAttributeValue("pn");
        if (pagePn.contains(","))
            pageArray.push(pageNode);
    }
    return pageArray;
}

function processXml(file) {
    _print("processXml: " + file);

    var XOM = ScriptUtils.createXomBuilder(false, false);
    var doc = XOM.build(file);
    var productNode = doc.getRootElement();
    var issueDate = productNode.getAttributeValue("issueDate") + "";

    // <parution time="29/08/2012 17:31:19" creationDate="120829173119" status="EN COURS"
    // comment="Generated by EidosMedia Methode 4.0 with XSL version: 1.5.5.5"
    // publicationDate="30/08/2012" id="PAR" editor="AMAURY" version="1" number="300812">
    var parutionElement = new Element("parution");
    parutionElement.addAttribute(new Attribute("time", getTime()));
    parutionElement.addAttribute(new Attribute("creationDate", new Date().getTime()));
    parutionElement.addAttribute(new Attribute("status", "EN COURS"));
    parutionElement.addAttribute(new Attribute("comment", "Generated by jSpool/cdf2cdte.js"));
    parutionElement.addAttribute(new Attribute("publicationDate", issueDate));
    parutionElement.addAttribute(new Attribute("id", "PAR"));
    parutionElement.addAttribute(new Attribute("editor", "AMAURY"));
    parutionElement.addAttribute(new Attribute("version", "1"));

    var editionNodes = productNode.getChildElements();
    for (var i = 0; i < editionNodes.size(); i++) {
        var editionNode = editionNodes.get(i);

        var editionName = editionNode.getAttributeValue("name") + "";
        if (editionName == "PAR")
            continue;

        var editionLabel = editionNode.getAttributeValue("label") + "";

        // <product parutionDate="30/08/2012" publicationLabel="JEUDI 30 AOÛT 2012" link="1"
        // status="EN COURS" comment="" publicationDate="30/08/2012" productLabel="ROUGH"
        // id="ROUGH" number="242" version="1">
        var productElement = new Element("product");
        productElement.addAttribute(new Attribute("parutionDate", issueDate));
        productElement.addAttribute(new Attribute("publicationDate", issueDate));
        productElement.addAttribute(new Attribute("productLabel", editionLabel));
        productElement.addAttribute(new Attribute("id", editionName));
        parutionElement.appendChild(productElement);

        var bookNodes = editionNode.getChildElements();
        for (var j = 0; j < bookNodes.size(); j++) {
            var bookNode = bookNodes.get(j);
            var bookName = bookNode.getAttributeValue("methodeName") + "";

            // <book pageFormat="LP" width="725" height="1003" inline="true" link="1" structure="AUJ 08 MITRY" id="CR">
            var bookElement = new Element("book");
            bookElement.addAttribute(new Attribute("id", bookName));
            bookElement.addAttribute(new Attribute("inline", "true"));
            productElement.appendChild(bookElement);

            var platesElement = new Element("plates");
            bookElement.appendChild(platesElement);

            var pageNodes = bookNode.getChildElements();
            var pageArray = createPageArray(pageNodes);
            var pageMax = pageArray.length;
            var pageMid = pageMax / 2;

            for (var k = 1; k <= pageMid; k++) {
                var pageNode = pageArray[k - 1];
                var pairedPageNode = pageArray[pageMax - k];

                var pageMasterEdition = pageNode.getAttributeValue("masterEdition") + "";
                var pageMasterPnEditionNum = pageNode.getAttributeValue("masterPnEditionNumber") + "";

                var pairedPageMasterEdition = pairedPageNode.getAttributeValue("masterEdition") + "";
                var pairedPageMasterPnEditionNum = pairedPageNode.getAttributeValue("masterPnEditionNumber") + "";

                var plate;
                var pageDate = issueDate.substr(0, 2) + issueDate.substr(3, 2) + issueDate.substr(8, 2);

                if (pageMasterEdition == editionName && pairedPageMasterEdition == editionName) {
                    plate = pageDate + "_PAR_" + editionName + "_" + bookName + "_P" + pad(k);
                }
                else {
                    var pageNum = getPageNum(pageArray, pageNode.getAttributeValue("pnEditionNumber") + "");
                    var pairedPageNum = getPageNum(pageArray, pairedPageNode.getAttributeValue("pnEditionNumber") + "");

                    var masterBookNode = doc.query("/product/edition[@name='" + pageMasterEdition + "']/book/page[@masterEdition='" + pageMasterEdition + "' and @pnEditionNumber='" + pageMasterPnEditionNum + "']/..").get(0);
                    var masterPagearray = createPageArray(masterBookNode.getChildElements());
                    var masterPageMax = masterPagearray.length;
                    var masterPageNum = getPageNum(masterPagearray, pageMasterPnEditionNum);

                    var pairedMasterBookNode = doc.query("/product/edition[@name='" + pairedPageMasterEdition + "']/book/page[@masterEdition='" + pairedPageMasterEdition + "' and @pnEditionNumber='" + pairedPageMasterPnEditionNum + "']/..").get(0);
                    var pairedMasterPagearray = createPageArray(pairedMasterBookNode.getChildElements());
                    var pairedMasterPageMax = pairedMasterPagearray.length;
                    var pairedMasterPageNum = getPageNum(pairedMasterPagearray, pairedPageMasterPnEditionNum);

                    // On teste les n° de page dans le cahier et la taille des cahiers
                    if (pageNum != masterPageNum || pairedPageNum != pairedMasterPageNum || pageMax != masterPageMax || pageMax != pairedMasterPageMax) {
                        plate = pageDate + "_PAR_" + editionName + "_" + bookName + "_P" + pad(k);
                    }
                    else if (pageMasterEdition == pairedPageMasterEdition) {
                        plate = pageDate + "_PAR_" + pageMasterEdition + "_" + masterBookNode.getAttributeValue("methodeName") + "_P" + pad(k);
                    }
                    else {
                        var pairedPageNode1 = masterPagearray[masterPageMax - k];
                        var pageNode2 = pairedMasterPagearray[k - 1];

                        if (pageNode2.getAttributeValue("masterEdition") == pageMasterEdition && pageNode2.getAttributeValue("masterPnEditionNumber") == pageMasterPnEditionNum) {
                            plate = pageDate + "_PAR_" + pairedPageMasterEdition + "_" + pairedMasterBookNode.getAttributeValue("methodeName") + "_P" + pad(k);
                        }
                        else if (pairedPageNode1.getAttributeValue("masterEdition") == pairedPageMasterEdition && pairedPageNode1.getAttributeValue("masterPnEditionNumber") == pairedPageMasterPnEditionNum) {
                            plate = pageDate + "_PAR_" + pageMasterEdition + "_" + masterBookNode.getAttributeValue("methodeName") + "_P" + pad(k);
                        }
                        else {
                            plate = pageDate + "_PAR_" + editionName + "_" + bookName + "_P" + pad(k);
                        }
                    }
                }

                var plateElement = new Element("plate");
                plateElement.addAttribute(new Attribute("usedColours", "CMYK"));
                plateElement.addAttribute(new Attribute("number", k));
                plateElement.addAttribute(new Attribute("filename", plate));
                platesElement.appendChild(plateElement);
            }
        }
    }

    // LeParisien_2012-08-30.xml.ctde
    var document = new Document(parutionElement);

    var filename = "LeParisien_" + issueDate.substr(6, 4) + "-" + issueDate.substr(3, 2) + "-" + issueDate.substr(0, 2) + ".xml.ctde";
    for (i in OUTPUT_DIRS) {
        var dstFile = new File(OUTPUT_DIRS[i], filename);
        writeElement(document, dstFile);
    }

    var filename2 = issueDate.substr(0, 2) + issueDate.substr(3, 2) + issueDate.substr(8, 2) + "_pagin_ctde.xml";
    for (j in OUTPUT_DIRS2) {
        var dstFile = new File(OUTPUT_DIRS2[j], filename2);
        writeElement(document, dstFile);
    }
}

function main() {
    processXml(_srcFile.getFile());
    return _OK;
}

// start & exit
try {
    _exit = main();
}
catch (e) {
    _print(e.name + ": " + e.message + " - " + e.fileName + " [" + e.lineNumber + "]");
    _exit = _FAIL;
}
