/* 
 * Emmanuel Deviller
* 
 * _srcDir : the spooled directory (String)
* _srcFile : the file found (SourceFile) 
 * _exit : exit value (_OK,_FAIL,_NOP,_KEEP) 
 *
* Attention aux mots réservés : ex.  file.delete => file["delete"] )
*/

importPackage(Packages.java.io)  ;
importPackage(Packages.java.util)  ;
importPackage(Packages.org.apache.commons.io) ;
importPackage(Packages.org.apache.commons.lang) ;
importPackage(Packages.com.adlitteram.jspool) ;
importPackage(Packages.nu.xom) ;

// Debug
//_print("srcDir : " + _srcDir);
//_print("srcFile : " + _srcFile.getPath());
OUTPUT_DIRS = [ "//srvfiler/sepagin/XPROD_DATA/PARUTIONS", "D:/LP/Depart/Plan" ] ;
//OUTPUT_DIRS = [ "d://tmp/xpo" ] ;

// 29/08/2012 17:31:19 
function getTime() {
    var d = new Date() ;
    return  pad(d.getDate()) + "/" + pad(d.getMonth() + 1) + "/" + d.getFullYear() + " " + pad(d.getHours()) + ":" + pad(d.getMinutes()) + ":" + pad(d.getSeconds()) ;
}

function pad(num) {
    return ( num < 10 ) ? "0" + num : "" + num  ;
}

function writeElement(document, dstFile) {
    _print("writeElement: " + dstFile );
    if ( dstFile.exists() ) FileUtils.forceDelete(dstFile) ;
    if ( !dstFile.getParentFile().exists() ) FileUtils.forceMkdir(dstFile.getParentFile()) ;
    var os = new BufferedOutputStream(new FileOutputStream(dstFile)) ;
    var serializer = new Serializer(os, "UTF-8");
    serializer.setIndent(3);
    serializer.write(document);
    os.close() ;
}

function getPageMax(pageNodes) {
    var pageMax = 0 ;
    for (var k = 0; k < pageNodes.size(); k++) {
        var pageNode = pageNodes.get(k);
        pageMax++ ;
        var pagePn = pageNode.getAttributeValue("pn") ;
        if ( pagePn.contains(",") ) pageMax++ ;
    }
    return pageMax ;
}

function checkEditionId(id) {
    return ( id == "PAR" ) ? "LPA" : id ; 
}

function processXml(file) {
    _print("processXml: " + file);
    var PUBCOUNT = 100 ;
    
    var XOM = ScriptUtils.createXomBuilder(false, false) ;
    var doc = XOM.build(file);
    var productNode = doc.getRootElement();
    var issueDate = productNode.getAttributeValue("issueDate") + ""  ;
    var number = issueDate.substr(0, 2) + issueDate.substr(3, 2) + issueDate.substr(6, 2) ; 

    // <parution time="29/08/2012 17:31:19" creationDate="120829173119" status="EN COURS"
    // comment="Generated by EidosMedia Methode 4.0 with XSL version: 1.5.5.5"
    // publicationDate="30/08/2012" id="PAR" editor="AMAURY" version="1" number="300812">
    var parutionElement = new Element("parution");
    parutionElement.addAttribute(new Attribute("time", getTime())) ;
    parutionElement.addAttribute(new Attribute("creationDate", new Date().getTime())) ;
    parutionElement.addAttribute(new Attribute("status", "EN COURS")) ;
    parutionElement.addAttribute(new Attribute("comment", "Generated by jSpool/cdf2cdte.js")) ;
    parutionElement.addAttribute(new Attribute("publicationDate", issueDate)) ;
    parutionElement.addAttribute(new Attribute("id", "PAR")) ;
    parutionElement.addAttribute(new Attribute("editor", "AMAURY")) ;
    parutionElement.addAttribute(new Attribute("number", number)) ;
    parutionElement.addAttribute(new Attribute("version", "1")) ;

    var editionNodes = productNode.getChildElements()  ;
    for (var i = 0; i < editionNodes.size(); i++) {
        var editionNode = editionNodes.get(i);
        var editionName = checkEditionId(editionNode.getAttributeValue("name")) + "" ;
        if ( editionName == "ROUGH" ) continue ;
        
        var editionLabel = editionNode.getAttributeValue("label") + "" ;
        
        // <product parutionDate="30/08/2012" publicationLabel="JEUDI 30 AOÛT 2012" link="1"
        // status="EN COURS" comment="" publicationDate="30/08/2012" productLabel="ROUGH"
        // id="ROUGH" number="242" version="1">
        var productElement = new Element("product");
        productElement.addAttribute(new Attribute("parutionDate", issueDate)) ;
        productElement.addAttribute(new Attribute("publicationDate", issueDate)) ;
        productElement.addAttribute(new Attribute("productLabel", editionLabel)) ;
        productElement.addAttribute(new Attribute("number", number)) ;
        //productElement.addAttribute(new Attribute("link", "1")) ;
        productElement.addAttribute(new Attribute("version", "1")) ;
        productElement.addAttribute(new Attribute("id", editionName)) ;
        parutionElement.appendChild(productElement) ;
        
        var bookNodes = editionNode.getChildElements() ;
        for (var j = 0; j < bookNodes.size(); j++) {
            var bookNode = bookNodes.get(j) ;
            var bookName = bookNode.getAttributeValue("methodeName") + "";

            var pageNodes = bookNode.getChildElements() ;
            var pageMax = getPageMax(pageNodes) ;

            // <book pageFormat="LP" width="725" height="1003" inline="true" link="1" structure="AUJ 08 MITRY" id="CR">
            var bookElement = new Element("book");
            bookElement.addAttribute(new Attribute("id", bookName)) ;
            bookElement.addAttribute(new Attribute("pageFormat", "LP")) ;
            bookElement.addAttribute(new Attribute("inline", "true")) ;
            bookElement.addAttribute(new Attribute("referenceBook", "")) ;
            bookElement.addAttribute(new Attribute("structure", "LP" + pageMax)) ;
            
            
            for (var k = 0; k < pageNodes.size(); k++) {
                var pageNode = pageNodes.get(k);
                var pageWidth ;
                var pageHeight ;
                
                if ( k == 0 ) {
                    pageWidth = pageNode.getAttributeValue("width") + "" ;
                    pageHeight = pageNode.getAttributeValue("height") + "" ;
                    bookElement.addAttribute(new Attribute("width", pageWidth)) ;
                    bookElement.addAttribute(new Attribute("height", pageHeight)) ;
                }
                
                var pageMasterEdition = pageNode.getAttributeValue("masterEdition") + "" ;
                var pagePnEditionNumber = pageNode.getAttributeValue("pnEditionNumber") + "" ;

                var pageElement = new Element("page") ;

                if ( editionName == checkEditionId(pageMasterEdition) ) {

                    var pagePn = pageNode.getAttributeValue("pn") ;
                    var pageTitle = pageNode.getAttributeValue("section") + "" ;
                    var pageLabel = pageNode.getAttributeValue("pageLabel") + "" ;
                    var logicalNumber = pagePn ;
                    var logicalNumberRight = pagePn ;
                    
                    var pageConfig = "SIMPLE" ;                                
                    if ( pagePn.contains(",") ) {
                        var p = pagePn.split(",") ;
                        logicalNumber = p[0] ;
                        logicalNumberRight = p[1] ;
                        pageConfig = ( logicalNumber == pageMax/2 ) ? "PANO" : "FDOUBLE" ;
                    }
 
                    var baseId = (pageNode.getAttributeValue("basePageId1")==null) ? "" : pageNode.getAttributeValue("basePageId1") ;
                    // _print("baseId: " + baseId);
                    var pageId = bookName + cleanId(baseId) + pagePnEditionNumber ;

                    pageElement.addAttribute(new Attribute("physicalNumber", logicalNumber)) ;
                    pageElement.addAttribute(new Attribute("title", pageTitle)) ;
                    pageElement.addAttribute(new Attribute("pageLayout", "4GAB")) ;
                    pageElement.addAttribute(new Attribute("regularNumber", "{ARABIC}")) ;
                    //pageElement.addAttribute(new Attribute("link", "")) ;
                    pageElement.addAttribute(new Attribute("id", pageId)) ;
                    pageElement.addAttribute(new Attribute("pageConfig", pageConfig)) ;
                    pageElement.addAttribute(new Attribute("pageTemplate", "unknown")) ;
                    pageElement.addAttribute(new Attribute("pageLabel1", pageLabel)) ;
                    pageElement.addAttribute(new Attribute("logicalNumberRight", logicalNumberRight)) ;
                    pageElement.addAttribute(new Attribute("pageLabel2", "")) ;
                    pageElement.addAttribute(new Attribute("logicalNumber", logicalNumber)) ;
                    pageElement.addAttribute(new Attribute("usedColours", "CMYK")) ;
                    pageElement.addAttribute(new Attribute("deadLine", "23:15")) ;
                    
                    // <object width="286.29922" height="311.81104" y="184.25201" link="1" comment="" order="" 
                    // usedColours="K" x="450.70868" id="COURRIER" side="RECTO-VERSO"> </object>                    
                    var storyNodes = pageNode.getChildElements() ;
                    for (var m = 0; m < storyNodes.size(); m++) {
                        var storyNode = storyNodes.get(m);
                        var contentNodes = storyNode.getChildElements() ;
                        for (var n = 0; n < contentNodes.size(); n++) {
                            var contentNode = contentNodes.get(n);
                            var contentType = contentNode.getAttributeValue("contentType") ;
                            if ( contentType == "ad" ) {                              
                                var adId = nonNull(storyNode.getAttributeValue("adId"))  ;
                                var adClient = nonNull(storyNode.getAttributeValue("adClient"))  ;                               
                                var adTitle = nonNull(storyNode.getAttributeValue("adTitle"))  ;
                                if ( adTitle.length == 0 ) {
                                    adTitle = nonNull(storyNode.getAttributeValue("subject"))                                    
                                }
                                if ( adTitle.length == 0 ) {
                                    adTitle = "PUB-" ;
                                }
                                    
                                var adName = cleanId(adTitle) ;
                                var adInstruction = nonNull(storyNode.getAttributeValue("adInstruction"))  ;
                                var adColors = nonNull(storyNode.getAttributeValue("adColors")).toUpperCase()  ;
                                
                                var objElement = new Element("object") ;
                                objElement.addAttribute(new Attribute("comment", adClient + " " + adInstruction)) ;
                                objElement.addAttribute(new Attribute("order", adId)) ;
                                objElement.addAttribute(new Attribute("id", adName + "-" + (++PUBCOUNT))) ;
                                objElement.addAttribute(new Attribute("usedColours", adColors)) ;
                                objElement.addAttribute(new Attribute("side", "RECTO-VERSO")) ;
                                
                                var shapeNode = contentNode.getFirstChildElement("shape") ;
                                if ( shapeNode != null ) {
                                    var shapeX = shapeNode.getAttributeValue("x") ;
                                    var shapeY = shapeNode.getAttributeValue("y") ;
                                    var shapeW = shapeNode.getAttributeValue("width") ;
                                    var shapeH = shapeNode.getAttributeValue("height") ;
                                    var yy = parseFloat(pageHeight) - (parseFloat(shapeY) + parseFloat(shapeH)) ;
                                    
                                    objElement.addAttribute(new Attribute("x", shapeX)) ;
                                    objElement.addAttribute(new Attribute("y", yy + "")) ;
                                    objElement.addAttribute(new Attribute("width", shapeW)) ;
                                    objElement.addAttribute(new Attribute("height", shapeH)) ;
                                }
                                pageElement.appendChild(objElement) ;                                            
                            }
                        }
                    }
                }
                else {
                    var pageMasterPnEditionNum = pageNode.getAttributeValue("masterPnEditionNumber") + "" ;
                    var physNodes = doc.query("/product/edition[@name='" + pageMasterEdition + "']/book/page[@pnEditionNumber='" + pageMasterPnEditionNum + "']") ;
                    if ( physNodes.size() > 0 ) {
                        var physNode = physNodes.get(0) ;
                        var physBookName = physNode.getParent().getAttributeValue("methodeName") + "";
                        var baseId = (physNode.getAttributeValue("basePageId1")==null) ? "" : physNode.getAttributeValue("basePageId1")  ;
                        var pageId = physBookName + cleanId(baseId) + pageMasterPnEditionNum ;
                        
                        var pagePn = physNode.getAttributeValue("pn") ;
                        var pageLabel = physNode.getAttributeValue("pageLabel") + "" ;
                        var logicalNumber = pagePn ;
                    
                        var pageConfig = "SIMPLE" ;                                
                        if ( pagePn.contains(",") ) {
                            var p = pagePn.split(",") ;
                            logicalNumber = p[0] ;
                            pageConfig = ( logicalNumber == pageMax/2 ) ? "PANO" : "FDOUBLE" ;
                        }
                        
                        pageElement.addAttribute(new Attribute("id", pageId)) ;
                        pageElement.addAttribute(new Attribute("pageConfig", nonNull(pageConfig))) ;
                        pageElement.addAttribute(new Attribute("pageLabel1", nonNull(pageLabel))) ;
                        pageElement.addAttribute(new Attribute("pageLayout", "4GAB")) ;
                        pageElement.addAttribute(new Attribute("regularNumber", "{ARABIC}")) ;
                        pageElement.addAttribute(new Attribute("deadLine", "23:15")) ;
                    }
                }
                
                bookElement.appendChild(pageElement) ;                
            }

            // On évite de créer des cahiers vides
            if ( bookElement.getChildCount() > 0 )
                productElement.appendChild(bookElement) ;                        
        }
    }
    
    // LeParisien_2012-08-30.xml.ctde
    var document = new Document(parutionElement);

    var filename = "LeParisien_" +  issueDate.substr(6,4) + "-" + issueDate.substr(3,2) + "-" + issueDate.substr(0,2) + ".xpo" ;
    for (i in OUTPUT_DIRS) {
        var dstFile = new File(OUTPUT_DIRS[i], filename) ;
        writeElement(document, dstFile);
    }

}

function cleanId(str) {
    var s = ScriptUtils.clean(str).replace(' ', '').replace('.', '').replace('_', '').replace('(', '').replace(')', '').toUpperCase() + ""
    return s.substring(0, Math.min(15,s.length));
}

function nonNull(value) {
    return ( value == null ) ? "" : value ;
}

function main() {
    processXml(_srcFile.getFile()) ;
    return _OK ;
}

// start & exit
try {
    _exit = main() ;
}
catch (e) {
    _print(e.name + ": " + e.message + " - " + e.fileName + " [" + e.lineNumber + "]") ;
    _exit = _FAIL;
}
